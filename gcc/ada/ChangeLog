2025-10-20  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/107536
	* exp_ch2.adb (Expand_Renaming): Mark the entity as referenced.

2025-07-03  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.cc (gnat_to_gnu_component_type): Validate the
	Component_Size like the size of a type only if the component type
	is actually packed.

2025-06-05  Release Manager

	* GCC 13.4.0 released.

2025-04-30  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/112958
	* Makefile.rtl (LIBGNAT_TARGET_PAIRS) [x86 FreeBSD]: Add specific
	version of s-dorepr.adb.
	* libgnat/s-dorepr__freebsd.adb: New file.

2025-04-04  Eric Botcazou  <ebotcazou@adacore.com>

	* libgnat/a-ngcoar.adb (Eigensystem): Adjust notation and fix the
	layout of the real symmetric matrix in the main comment.  Adjust
	the layout of the associated code accordingly and correctly turn
	the 2Nx1 real vectors into Nx1 complex ones.
	(Eigenvalues): Minor similar tweaks.
	* libgnat/a-ngrear.adb (Jacobi): Minor tweaks in the main comment.
	Adjust notation and corresponding parameter names of functions.
	Fix call to Unit_Matrix routine.  Adjust the comment describing
	the various kinds of iterations to match the implementation.

2025-03-19  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.cc (gnat_to_gnu_entity) <E_Record_Subtype>: Set
	the may_alias attribute if a specific GCC type is built.

2025-03-19  Eric Botcazou  <ebotcazou@adacore.com>

	* gen_il-gen-gen_nodes.adb (N_Formal_Package_Declaration): Use
	N_Declaration instead of Node_Kind as ancestor.
	* sem_ch12.adb (Get_Formal_Entity): Remove obsolete alternative.
	(Instantiate_Formal_Package): Take into account the abbreviated
	instances in the main loop running over the actuals of the local
	package created for the formal package.

2025-02-01  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/118712
	* sem_warn.adb (Check_References): Deal with small adjustments of
	references.

2025-01-06  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_aggr.adb (Two_Pass_Aggregate_Expansion): Use the base type of
	the index type to find the type used to compute the length.

2025-01-05  Estevan Castilho (Tevo)  <estevan.cps@gmail.com>

	* libgnarl/s-taprop__dummy.adb: Remove use clause for
	System.Parameters.
	(Unlock): Remove Global_Lock formal parameter.
	(Write_Lock): Likewise.

2024-12-16  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.cc (get_atomic_access): Deal specifically with
	nodes that are both Atomic and Volatile_Full_Access in Ada 2012.

2024-12-12  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/117996
	* libgnat/a-ngrear.adb (Jacobi): Remove default value for
	Compute_Vectors formal parameter.
	(Sort_Eigensystem): Add Compute_Vectors formal parameter.  Do not
	modify the Vectors if Compute_Vectors is False.
	(Eigensystem): Pass True as Compute_Vectors to Sort_Eigensystem.
	(Eigenvalues): Pass False as Compute_Vectors to Sort_Eigensystem.

2024-11-26  Arsen Arsenović  <arsen@aarsen.me>

	Backported from master:
	2024-08-19  Arsen Arsenović  <arsen@aarsen.me>

	PR ada/115917
	* gnatvsn.ads: Add note about the duplication of this value in
	version.c.
	* version.c (VER_LEN_MAX): Define to the same value as
	Gnatvsn.Ver_Len_Max.
	(gnat_version_string): Use VER_LEN_MAX as bound.

2024-11-12  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/117328
	* exp_aggr.adb (Two_Pass_Aggregate_Expansion): Use a type sized
	from the index type to compute the length.  Simplify and remove
	useless calls to New_Copy_Tree for this computation.

2024-11-12  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/113868
	* par-ch6.adb (P_Subprogram) <Scan_Body_Or_Expression_Function>:
	Add delta aggregate alongside the other forms of aggregates.

2024-11-04  Eric Botcazou  <ebotcazou@adacore.com>

	* checks.adb (Selected_Length_Checks.Get_E_Length): For a
	component of a record with discriminants and if the expression is
	a selected component, try to build an actual subtype from its
	prefix instead of from the discriminal.

2024-10-25  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/116551
	* gcc-interface/trans.cc (node_is_atomic) <N_Identifier>: Return
	false if the type of the entity is an unconstrained array type.
	(node_is_volatile_full_access) <N_Identifier>: Likewise.

2024-10-14  Steve Baird  <baird@adacore.com>

	PR ada/114593
	* sem_res.adb (Valid_Conversion): Test In_Instance instead of
	In_Instance_Body.

2024-10-09  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/115535
	* exp_put_image.adb: Remove clauses for Sem_Aux.

2024-10-08  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_aggr.ads (Is_Two_Pass_Aggregate): New function declaration.
	* exp_aggr.adb (Is_Two_Pass_Aggregate): New function body.
	(Expand_Array_Aggregate): Call Is_Two_Pass_Aggregate to detect the
	aggregates that need the 2-pass expansion.
	* exp_ch3.adb (Expand_Freeze_Array_Type): In the anonymous array
	case, build the initialization procedure if the initial value in
	the object declaration is a 2-pass aggregate.

2024-10-08  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/115535
	* exp_put_image.adb (Build_Elementary_Put_Image_Call): Use the size
	of the underlying type to find the support type.

2024-10-08  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/114640
	* exp_util.adb (Find_Hook_Context): For a node present within a
	conditional expression, do not return an N_Elsif_Part node.

2024-10-08  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/114636
	* sem_ch12.adb (Check_Formal_Package_Instance): For a defaulted
	formal discrete type, skip the generated implicit base type.

2024-06-10  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/114708
	* exp_util.adb (Finalize_Address): Add guard for incomplete types.

2024-06-10  Javier Miranda  <miranda@adacore.com>

	* sem_ch6.adb (Might_Need_BIP_Task_Actuals): Add support
	for access-to-subprogram parameter types.
	* exp_ch6.adb (Add_Task_Actuals_To_Build_In_Place_Call):
	Add dummy BIP parameters to access-to-subprogram types
	that may reference a function that has BIP parameters.

2024-05-21  Release Manager

	* GCC 13.3.0 released.

2024-03-13  Marc Poulhiès  <poulhies@adacore.com>

	* sem_ch13.adb (Check_Aspect_At_Freeze_Point): fix format string,
	use existing local Ident.

2024-03-13  Marc Poulhiès  <poulhies@adacore.com>

	* sem_ch13.adb (Analyze_One_Aspect): Call Record_Rep_Item.
	(Check_Aspect_At_Freeze_Point): Check the aspect is specified on
	non-array type only...
	(Analyze_One_Aspect): ... instead of doing it too early here.
	* sem_aggr.adb (Resolve_Container_Aggregate): Do nothing in case
	the parameters failed to resolve.

2024-03-13  Marc Poulhiès  <poulhies@adacore.com>

	* sem_ch13.adb (Analyze_One_Aspect): Mark Aggregate aspect as
	needing delayed resolution and reject the aspect on non-array
	type.

2024-03-07  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/113979
	* exp_ch4.adb (Expand_N_Allocator): In the subtype indication case,
	remove call to Apply_Predicate_Check.

2024-02-26  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/113893
	* exp_ch7.adb (Build_Anonymous_Master): Do not build the master
	for a local designated type.
	* exp_util.adb (Build_Allocate_Deallocate_Proc): Force Needs_Fin
	to false if no finalization master is attached to an access type
	and assert that it is anonymous in this case.
	* sem_res.adb (Resolve_Allocator): Mention that the object might
	not be finalized at all in the warning given when the type is an
	anonymous access-to-controlled type.

2024-02-03  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_attr.adb (Expand_N_Attribute_Reference): Revert older change.

2024-02-03  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_attr.adb (Expand_N_Attribute_Reference): Revert latest change.

2024-01-09  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/112781
	* exp_ch6.ads (Is_Build_In_Place_Function): Adjust description.
	* exp_ch6.adb (Is_True_Build_In_Place_Function_Call): Delete.
	(Is_Function_Call_With_BIP_Formals): New predicate.
	(Is_Build_In_Place_Function_Call): Restore original semantics.
	(Expand_Call_Helper): Adjust conditions guarding the calls to
	Add_Dummy_Build_In_Place_Actuals to above renaming.
	(Expand_N_Extended_Return_Statement): Adjust to above renaming.
	(Expand_Simple_Function_Return): Likewise.  Move the assertion
	to after the transformation into an extended return statement.
	(Make_Build_In_Place_Call_In_Allocator): Remove unreachable code.
	(Make_Build_In_Place_Call_In_Assignment): Likewise.

2024-01-09  Javier Miranda  <miranda@adacore.com>

	* einfo-utils.adb (Underlying_Type): Protect recursion call
	against non-available attribute Etype.
	* einfo.ads (Protected_Subprogram): Fix typo in documentation.
	* exp_ch3.adb (BIP_Function_Call_Id): New subprogram.
	(Expand_N_Object_Declaration): Improve code that evaluates if the
	object is initialized with a BIP function call.
	* exp_ch6.adb (Is_True_Build_In_Place_Function_Call): New
	subprogram.
	(Add_Task_Actuals_To_Build_In_Place_Call): Add dummy actuals if
	the function does not require the BIP task actuals but it is a
	dispatching operation that inherited them.
	(Build_In_Place_Formal): Improve code to avoid never-ending loop
	if the BIP formal is not found.
	(Add_Dummy_Build_In_Place_Actuals): New subprogram.
	(Expand_Call_Helper): Add calls to
	Add_Dummy_Build_In_Place_Actuals.
	(Expand_N_Extended_Return_Statement): Adjust assertion.
	(Expand_Simple_Function_Return): Adjust assertion.
	(Make_Build_In_Place_Call_In_Allocator): No action needed if the
	called function inherited the BIP extra formals but it is not a
	true BIP function.
	(Make_Build_In_Place_Call_In_Assignment): Ditto.
	* exp_intr.adb (Expand_Dispatching_Constructor_Call): Remove code
	reporting unsupported case (since this patch adds support for it).
	* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Adding assertion
	to ensure matching of BIP formals when setting the
	Protected_Formal field of a protected subprogram to reference the
	corresponding extra formal of the subprogram that implements it.
	(Might_Need_BIP_Task_Actuals): New subprogram.
	(Create_Extra_Formals): Improve code adding inherited extra
	formals.

2024-01-09  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/112781
	* sem_ch12.adb (Instantiate_Type): Use Etype instead of Base_Type
	consistently to retrieve the ancestor for a derived type.
	* sem_ch4.adb (Analyze_Explicit_Dereference): Test Is_Access_Type
	consistently before accessing Designated_Type.

2024-01-09  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/utils2.cc (build_binary_op) <EQ_EXPR>: Relax
	assertion for regular pointer types.

2023-12-20  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch3.adb (Analyze_Subtype_Declaration): Remove a short-circuit
	for subtypes without aspects when it comes to predicates.
	* sem_util.adb (Inherit_Predicate_Flags): Deal with private subtypes
	whose full view is an Itype.

2023-12-04  Steve Baird  <baird@adacore.com>

	* exp_attr.adb (Expand_N_Attribute_Reference): In the case of a
	Reduce attribute reference, fix bugs in initializing Accum_Typ.
	The previous version was incorrect in the case where E1 refers to
	the first of multiple possible overload resolution candidates and
	that candidate does not turn out to be the right one. The previous
	version also had code to compute Accum_Typ via a different method
	if the initial computation turned out to yield a universal numeric
	type. Delete that initial computation and use the second method in
	all cases.

2023-11-16  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.cc (gnat_to_gnu_subprog_type): Also create a
	TYPE_DECL for the return type built for the CI/CO mechanism.

2023-10-10  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/111434
	* sem_ch10.adb (Replace): New procedure to replace an entity with
	another on the homonym chain.
	(Install_Limited_With_Clause): Rename Non_Lim_View to Typ for the
	sake of consistency.  Call Replace to do the replacements and split
	the code into the regular and the special cases.  Add debuggging
	output controlled by -gnatdi.
	(Install_With_Clause): Print the Parent_With and Implicit_With flags
	in the debugging output controlled by -gnatdi.
	(Remove_Limited_With_Unit.Restore_Chain_For_Shadow (Shadow)): Rewrite
	using a direct replacement of E4 by E2.   Call Replace to do the
	replacements.  Add debuggging output controlled by -gnatdi.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch7.adb (Build_Finalizer.Process_Declarations): Remove call
	to Is_Simple_Protected_Type as redundant.
	(Build_Finalizer.Process_Object_Declaration): Do not retrieve the
	corresponding record type for simple protected objects. Make the
	flow of control more explicit in their specific processing.
	* exp_util.adb (Requires_Cleanup_Actions): Return false for simple
	protected objects present in library-level package bodies for the
	sake of consistency with Build_Finalizer and remove call to
	Is_Simple_Protected_Type as redundant.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* einfo.ads (Status_Flag_Or_Transient_Decl): Remove ??? comment.
	* exp_ch6.adb (Expand_N_Extended_Return_Statement): Extend the
	handling of finalizable return objects to the non-BIP case.
	* exp_ch7.adb (Build_Finalizer.Process_Declarations): Adjust the
	comment accordingly.
	* exp_util.adb (Requires_Cleanup_Actions): Likewise.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/utils.cc (finish_record_type): Round the size in
	the padding case as well.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* inline.adb (Expand_Inlined_Call): In the case of a function call
	that returns an unconstrained type and initializes an object, set
	the No_Initialization flag on the new declaration of the object.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_aggr.adb (Convert_To_Assignments): In the case of a
	component association, call Is_Container_Aggregate on the parent's
	parent.
	(Expand_Array_Aggregate): Likewise.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_res.adb (Resolve_Call): When the target is an entity, do not
	freeze it if the current scope is the inner wrapper function built
	for an expression function with a Post or Refined_Post aspect.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch6.adb (Expand_Ctrl_Function_Call): Also do nothing for the
	expression of a delta aggregate.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.adb (Initialized_By_Aliased_BIP_Func_Call): Make the name
	matching more robust.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.cc (gnat_to_gnu): Really test Storage_Pool on
	the simple return statement.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* freeze.adb (Freeze_Enumeration_Type): Give an error on a type with
	both representation clause and too large size.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.adb (Make_Invariant_Call): Convert the expression to
	the type of the formal parameter if need be.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.cc (gnat_to_gnu): Restrict previous change to
	the case where the simple return statement has got no storage pool.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_aggr.adb (Is_Two_Dim_Packed_Array): Return true only if the
	component type of the array is scalar.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_util.ads (Wrong_Type): Add Multiple parameter defaulting to
	False and document it.
	* sem_util.adb (Wrong_Type): Do not return early if an error has
	already been posted on Expr and Multiple is True.
	* sem_ch4.adb (Analyze_One_Call): Pass All_Errors_Mode as the
	actual parameter for Multiple to Wrong_Type.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch13.adb (Replace_Type_References_Generic.Visible_Component):
	In the case of private discriminated types, explicitly check that we
	have a private declaration before examining its discriminant part.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_util.ads (Validated_View): Document enhanced behavior.
	* sem_util.adb (Validated_View): Return the nonlimited view, if any,
	of types coming from a limited with.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch13.adb (Replace_Type_References_Generic.Visible_Component):
	In the case of private discriminated types, return a discriminant
	only if it is listed in the discriminant part of the declaration.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_util.adb (Has_Inferable_Discriminants): In the case of a
	component with a per-object constraint, also return true if the
	enclosing object is not of an unchecked union type.
	In the default case, remove a useless call to Base_Type.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.cc (Subprogram_Body_to_gnu): Add guard to the
	code turning the type of the RESULT_DECL into a reference type.
	(maybe_make_gnu_thunk): Use a more precise guard in the same case.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.cc (gnat_to_gnu_entity) <E_Variable>: Restrict
	the special handling of temporaries created for return values and
	subject to a renaming to the top level.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.cc (gnat_to_gnu_entity) <E_Variable>: Tweak.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Make_Allocator_For_Return): Rewrite the logic that
	determines the type used for the allocation and add assertions.
	* exp_util.adb (Has_Tag_Of_Type): Also return true for extension
	aggregates.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Make_Allocator_For_Return): Deal again specifically
	with an aggregate returned through an object of a class-wide type.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch4.adb (Analyze_Call): Adjust the test to detect the presence
	of an incomplete view of a type on a function call.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_type.adb (Disambiguate): Fix pasto in the implementation of
	the RM 8.4(10) clause for operators.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch13.adb (Analyze_Aspect_Specifications): Add missing items
	in the list of aspects handled by means of Insert_Pragma.
	<Aspect_Linker_Section>: Remove obsolete code.  Do not delay the
	processing of the aspect if the entity is already frozen.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* contracts.adb (Contract_Error): New exception.
	(Add_Contract_Item): Raise Contract_Error instead of Program_Error.
	(Add_Generic_Contract_Pragma): Deal with Contract_Error.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* contracts.adb (Analyze_Entry_Or_Subprogram_Body_Contract): For a
	subprogram body that has no contracts and does not come from source,
	make sure that contracts on its corresponding spec are analyzed, if
	any, before expanding them.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_aggr.adb (Build_Array_Aggr_Code.Get_Assoc_Expr): Duplicate the
	expression here instead of...
	(Build_Array_Aggr_Code): ...here.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* freeze.adb (Check_Large_Modular_Array): Fix head comment, use
	Standard_Long_Long_Integer_Size directly and generate a reference
	just before the raise statement if the Etype of the object is an
	itype declared in an open scope.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch7.adb (Find_Enclosing_Transient_Scope): Return the index in
	the scope table instead of the scope's entity.
	(Establish_Transient_Scope): If an enclosing scope already exists,
	do not set the Uses_Sec_Stack flag on it if the node to be wrapped
	is a return statement which requires secondary stack management.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_res.adb (Resolve_Call): Restrict previous change to calls that
	return on the same stack as the enclosing function.  Tidy up.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.adb (Build_DIC_Procedure_Body.Add_Own_DIC): When inside
	a generic unit, preanalyze the expression directly.
	(Build_Invariant_Procedure_Body.Add_Own_Invariants): Likewise.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* freeze.adb (Wrap_Imported_Subprogram): Use Copy_Subprogram_Spec in
	both cases to copy the spec of the subprogram.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch7.adb (Establish_Transient_Scope.Find_Transient_Context):
	Bail out for a simple return statement only if the transient scope
	and the function both require secondary stack management, or else
	if the function is a thunk.
	* sem_res.adb (Resolve_Call): Do not create a transient scope when
	the call is the expression of a simple return statement.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch6.adb (Expand_Simple_Function_Return): Call Insert_Actions
	consistently when rewriting the expression.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.adb (Is_Finalizable_Transient.Is_Indexed_Container):
	New predicate to detect a temporary created to hold the result of
	a constant indexing on a container.
	(Is_Finalizable_Transient.Is_Iterated_Container): Adjust a couple
	of obsolete comments.
	(Is_Finalizable_Transient): Return False if Is_Indexed_Container
	returns True on the object.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_res.adb (Has_Applicable_User_Defined_Literal): Make it clear
	that the predicate also checks the node itself.
	(Try_User_Defined_Literal): Move current implementation to...
	Deal only with literals, named numbers and conditional expressions
	whose dependent expressions are literals or named numbers.
	(Try_User_Defined_Literal_For_Operator): ...this.  Remove multiple
	return False statements and put a single one at the end.
	(Resolve): Call Try_User_Defined_Literal instead of directly
	Has_Applicable_User_Defined_Literal for all nodes.  Call
	Try_User_Defined_Literal_For_Operator for operator nodes.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch5.adb (Expand_N_Case_Statement): Do not remove the statement
	if it is the node to be wrapped by a transient scope.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_prag.adb (Process_Compile_Time_Warning_Or_Error): Do not defer
	anything to the back-end when the main unit is generic.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_res.adb (Try_User_Defined_Literal): Restrict previous change
	to non-leaf nodes.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_res.adb (Try_User_Defined_Literal): For arithmetic operators,
	also accept operands whose type is covered by the resolution type.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch4.adb (Expand_N_In): Deal specifically with a null operand.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch6.adb (Expand_Simple_Function_Return): Deal with a rewriting
	of the simple return during the adjustment of its expression.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch4.adb (Expand_N_Case_Expression): Distribute simple return
	statements enclosing the conditional expression into the dependent
	expressions in almost all cases.
	(Expand_N_If_Expression): Likewise.
	(Process_Transient_In_Expression): Adjust to the above distribution.
	* exp_ch6.adb (Expand_Ctrl_Function_Call): Deal with calls in the
	dependent expressions of a conditional expression.
	* sem_ch6.adb (Analyze_Function_Return): Deal with the rewriting of
	a simple return statement during the resolution of its expression.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch4.ads (Unresolved_Operator): New procedure.
	* sem_ch4.adb (Has_Possible_Literal_Aspects): Rename into...
	(Has_Possible_User_Defined_Literal): ...this.  Tidy up.
	(Operator_Check): Accept again unresolved operators if they have a
	possible user-defined literal as operand.  Factor out the handling
	of the general error message into...
	(Unresolved_Operator): ...this new procedure.
	* sem_res.adb (Resolve): Be prepared for unresolved operators on
	entry in Ada 2022 or later.  If they are still unresolved on exit,
	call Unresolved_Operator to give the error message.
	(Try_User_Defined_Literal): Tidy up.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch12.adb (Copy_Generic_Node): Test the original node kind
	for the sake of consistency.  For identifiers and other entity
	names and operators, accept an expanded name as associated node.
	Replace "or" with "or else" in condtion and fix its formatting.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch12.adb (Instantiate_Package_Body): Set the ghost mode to
	that of the instance only after loading the generic's parent.
	(Instantiate_Subprogram_Body): Likewise.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_attr.adb (Is_Thin_Pointer_To_Unc_Array): New predicate.
	(Resolve_Attribute): Apply the static matching legality rule to an
	Unrestricted_Access attribute applied to an aliased prefix if the
	type is a thin pointer.  Call Is_Thin_Pointer_To_Unc_Array for the
	aliasing legality rule as well.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* checks.adb (Selected_Range_Checks): Add guards to protect calls
	to Expr_Value on bounds.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch3.adb (Find_Type_Of_Object): Copy the object definition when
	building the subtype declaration in the case of a spec expression.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch13.adb (Build_Predicate_Functions): If the current scope
	is not that of the type, push this scope and pop it at the end.
	* sem_util.ads (Current_Scope_No_Loops_No_Blocks): Delete.
	* sem_util.adb (Current_Scope_No_Loops_No_Blocks): Likewise.
	(Set_Public_Status): Call again Current_Scope.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch13.adb (Build_Predicate_Function_Declaration): Adjust the
	commentary to the current implementation.
	* sem_util.ads (Current_Scope_No_Loops): Move around.
	(Current_Scope_No_Loops_No_Blocks): New declaration.
	(Add_Block_Identifier): Fix formatting.
	* sem_util.adb (Add_Block_Identifier): Likewise.
	(Current_Scope_No_Loops_No_Blocks): New function.
	(Set_Public_Status): Call Current_Scope_No_Loops_No_Blocks instead
	of Current_Scope to get the current scope.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Build_Record_Init_Proc.Build_Assignment): Do not
	manually generate a predicate check.  Call Unqualify before doing
	pattern matching on the expression.
	* sem_ch3.adb (Analyze_Object_Declaration): Also freeze the actual
	subtype when it is built in the definite case.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* frontend.adb (Frontend): Merge two conditional blocks and adjust.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch7.adb (Expand_N_Package_Body): Call Defining_Entity to get
	the entity of the body.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Make_Controlling_Function_Wrappers): Create the body
	as the expanded body of an expression function.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Freeze_Type): Do not associate the Finalize_Address
	routine for a class-wide type if restriction No_Dispatching_Calls
	is in effect.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* freeze.adb (Wrap_Imported_Subprogram): Use Copy_Subprogram_Spec
	to copy the spec from the subprogram to the generated subprogram
	body.
	(Freeze_Entity): Do not wrap imported subprograms inside generics.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch4.adb (Expand_N_Expression_With_Actions.Process_Action): Do
	not look into nested blocks.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch3.adb (Find_Type_Of_Object): In a spec expression, also set
	the Scope of the type, and call Constrain_Array for array subtypes.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_attr.adb (Expand_N_Attribute_Reference) <Attribute_Reduce>:
	Use the canonical accumulator type as the type of the accumulator
	in the prefixed case.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* freeze.adb (Freeze_Expression): When the freezing is to be done
	outside the current scope, skip any scope that is an internal loop.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_imgv.adb (Rewrite_Object_Image): If the prefix is a component
	that depends on a discriminant, create an actual subtype for it.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch13.adb: Add with and use clauses for Expander.
	(Resolve_Aspect_Expressions) <Aspect_Predicate>: Emulate a
	bona-fide preanalysis setup before calling
	Resolve_Aspect_Expression.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_res.adb (Has_Applicable_User_Defined_Literal): Apply the
	same processing for derived untagged types as for tagged types.
	* sem_util.ads (Corresponding_Primitive_Op): Adjust description.
	* sem_util.adb (Corresponding_Primitive_Op): Handle untagged
	types.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_ch7.adb (Hide_Public_Entities): Use the same condition for
	subprogram bodies without specification as for those with one.

2023-09-27  Eric Botcazou  <ebotcazou@adacore.com>

	* repinfo.ads (JSON output format): Document special case of
	Present member of a Variant object.
	* repinfo.adb (List_Structural_Record_Layout): Change the type of
	Ext_Level parameter to Integer. Restrict the first recursion with
	increasing levels to the fixed part and implement a second
	recursion with decreasing levels for the variant part. Deal with
	an extension of a type with unknown discriminants.

2023-09-26  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/110488
	* sem_ch3.adb (Analyze_Object_Declaration): Do not build a default
	subtype for a deferred constant in the definite case too.

2023-07-27  Release Manager

	* GCC 13.2.0 released.

2023-07-11  Eric Botcazou  <ebotcazou@adacore.com>

	* adaint.c [_WIN32]: Undefine 'abort' macro.

2023-07-07  Viljar Indus  <indus@adacore.com>

	* exp_aggr.adb (Expand_N_Aggregate): Ensure that container
	aggregate expressions do not get expanded as records but instead
	as container aggregates.

2023-07-07  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_aggr.adb (Convert_To_Assignments): Tweak comment.
	(Expand_Array_Aggregate): Do not delay the expansion if the parent
	node is a container aggregate.

2023-07-07  Marc Poulhiès  <poulhies@adacore.com>

	* exp_aggr.adb (Convert_To_Assignments): Do not mark node for
	delayed expansion if parent type has the Aggregate aspect.
	* sem_util.adb (Is_Container_Aggregate): Move...
	* sem_util.ads (Is_Container_Aggregate): ... here and make it
	public.

2023-06-15  Eric Botcazou  <ebotcazou@adacore.com>

	* sinfo.ads (Iterator_Filter): Document field.
	* sem_ch5.adb (Analyze_Iterator_Specification): Move comment around.
	(Analyze_Loop_Parameter_Specification): Only preanalyze the iterator
	filter, if any.
	* exp_ch5.adb (Expand_N_Loop_Statement): Analyze the new list built
	when an iterator filter is present.

2023-04-26  Release Manager

	* GCC 13.1.0 released.

2023-04-15  Eric Botcazou  <ebotcazou@adacore.com>

	PR bootstrap/109510
	* gcc-interface/decl.cc (gnat_to_gnu_entity) <types>: Do not reset
	align to zero in any case.  Set TYPE_USER_ALIGN on the type only if
	it is an aggregate type, or else a type whose default alignment is
	specifically capped on selected platforms.

2023-04-14  Eric Botcazou  <ebotcazou@adacore.com>

	PR bootstrap/109510
	* gcc-interface/decl.cc (gnat_to_gnu_entity) <types>: Reset align
	to zero if its value is equal to TYPE_ALIGN and the type is scalar.
	Set TYPE_USER_ALIGN on the type only if align is positive.

2023-03-06  Javier Miranda  <miranda@adacore.com>

	PR ada/108858
	* sem_ch6.adb (Analyze_Subprogram_Body_Helper): For functions with
	separate spec, if their return type was visible through a limited-
	with context clause, their extra formals were not added when the
	spec was analyzed.  Now the full view must be available, and the
	extra formals can be created and Returns_By_Ref computed.

2023-03-06  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/108909
	PR ada/108983
	* Make-generated.in: Do not use GNATMAKE.
	* gcc-interface/Makefile.in: Ditto.

2023-02-26  Peter Foley  <pefoley2@pefoley.com>

	PR ada/108909
	* Make-generated.in: Use GNATMAKE.
	* gcc-interface/Makefile.in: Ditto.

2023-02-14  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.cc (gnat_gimplify_expr): Add missing guard.

2023-02-14  Dongsheng Song  <dongsheng.song@gmail.com>

	* adaint.c [Linux]: Include <features.h>.
	(__gnat_get_executable_load_address) [Linux]: Enable only for
	glibc and uClibc.

2023-01-16  Marc Poulhiès  <poulhies@adacore.com>

	* gcc-interface/Make-lang.in: Update copyright years.
	* gcc-interface/Makefile.in: Likewise.
	* gcc-interface/ada-builtin-types.def: Likewise.
	* gcc-interface/ada-builtins.def: Likewise.
	* gcc-interface/ada-tree.def: Likewise.
	* gcc-interface/ada-tree.h: Likewise.
	* gcc-interface/ada.h: Likewise.
	* gcc-interface/config-lang.in: Likewise.
	* gcc-interface/cuintp.cc: Likewise.
	* gcc-interface/decl.cc: Likewise.
	* gcc-interface/gadaint.h: Likewise.
	* gcc-interface/gigi.h: Likewise.
	* gcc-interface/lang-specs.h: Likewise.
	* gcc-interface/lang.opt: Likewise.
	* gcc-interface/misc.cc: Likewise.
	* gcc-interface/system.ads: Likewise.
	* gcc-interface/targtyps.cc: Likewise.
	* gcc-interface/trans.cc: Likewise.
	* gcc-interface/utils.cc: Likewise.
	* gcc-interface/utils2.cc: Likewise.

2023-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Make_Allocator_For_Return): Fix typo in comment.

2023-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Make_Allocator_For_Return): Convert the expression
	to the return object's type in the constrained array case as well.

2023-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): For a class-wide non-
	interface stand-alone object initialized by a function call, call
	Remove_Side_Effects on the expression to capture the result.

2023-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.ads (Has_Tag_Of_Type): Declare.
	* exp_util.adb (Has_Tag_Of_Type): Move to package level.  Recurse on
	qualified expressions.
	* exp_ch3.adb (Expand_N_Object_Declaration): Use a static reference
	to the interface tag in more cases for class-wide interface objects.

2023-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.adb (Make_CW_Equivalent_Type.Has_Tag_Of_Type): Fix pasto.

2023-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.adb (Is_Temporary_For_Interface_Object): Delete.
	(Is_Finalizable_Transient.Is_Aliased): Deal with the specific case
	of temporaries generated for interface objects.

2023-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): Do not generate a back-
	and-forth displacement of the object's address when using a renaming
	for an interface object with an expression of the same type.
	* exp_ch4.adb (Expand_Allocator_Expression): Do not remove the side
	effects of the expression up front for the simple allocators. Do not
	call the Adjust primitive if the expression is a function call.
	* exp_ch6.adb (Expand_Ctrl_Function_Call): Do not expand the call
	unnecessarily for a special return object.
	(Expand_Simple_Function_Return): Restore the displacement of the
	return object's address in the case where the expression is the call
	to a function whose result type is a type that needs finalization.
	* exp_util.adb (Expand_Subtype_From_Expr): Do not remove the side
	effects of the expression before calling Make_Subtype_From_Expr.
	(Make_CW_Equivalent_Type): If the expression has the tag of its type
	and this type has a uniform size, use 'Object_Size of this type in
	lieu of 'Size of the expression to compute the expression's size.

2023-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Make_Allocator_For_Return): Put back an interface
	conversion for expressions with non-interface class-wide type.

2023-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): Also optimize aliased
	objects if their nominal subtype is not an unconstrained array.

2023-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): Factor out conditions
	needed for an initializating expression that is a function call to
	be renamable into the Is_Renamable_Function_Call predicate.
	Use it to implement the renaming in the case of class-wide interface
	objects.  Remove an interface conversion on all paths, separate and
	optimize the renaming path in the special expansion for interfaces.
	(Is_Renamable_Function_Call): New predicate.
	(Make_Allocator_For_Return): Put back an interface conversion.
	* exp_ch6.adb (Apply_CW_Accessibility_Check): Remove useless access
	checks on RE_Tag_Ptr.

2023-01-09  Arnaud Charlet  <charlet@adacore.com>

	* accessibility.adb, accessibility.ads, ada_get_targ.adb: Update copyright year.
	* adabkend.adb, adabkend.ads, adadecode.c, adadecode.h, adaint.c: Likewise.
	* adaint.h, affinity.c, ali-util.adb, ali-util.ads, ali.adb: Likewise.
	* ali.ads, alloc.ads, argv-lynxos178-raven-cert.c, argv.c: Likewise.
	* aspects.adb, aspects.ads, atree.adb, atree.ads, atree.h: Likewise.
	* aux-io.c, back_end.adb, back_end.ads, backend_utils.adb: Likewise.
	* backend_utils.ads, bcheck.adb, bcheck.ads, binde.adb, binde.ads: Likewise.
	* binderr.adb, binderr.ads, bindgen.adb, bindgen.ads: Likewise.
	* bindo-augmentors.adb, bindo-augmentors.ads, bindo-builders.adb: Likewise.
	* bindo-builders.ads, bindo-diagnostics.adb: Likewise.
	* bindo-diagnostics.ads, bindo-elaborators.adb: Likewise.
	* bindo-elaborators.ads, bindo-graphs.adb, bindo-graphs.ads: Likewise.
	* bindo-units.adb, bindo-units.ads, bindo-validators.adb: Likewise.
	* bindo-validators.ads, bindo-writers.adb, bindo-writers.ads: Likewise.
	* bindo.adb, bindo.ads, bindusg.adb, bindusg.ads, butil.adb: Likewise.
	* butil.ads, cal.c, casing.adb, casing.ads, checks.adb: Likewise.
	* checks.ads, cio.c, clean.adb, clean.ads: Likewise.
	* comperr.adb, comperr.ads, contracts.adb, contracts.ads: Likewise.
	* csets.adb, csets.ads, cstand.adb: Likewise.
	* cstand.ads, cstreams.c, ctrl_c.c, debug.adb, debug.ads: Likewise.
	* debug_a.adb, debug_a.ads, einfo-utils.adb, einfo-utils.ads: Likewise.
	* einfo.adb, einfo.ads, elists.adb, elists.ads, elists.h, env.c: Likewise.
	* env.h, err_vars.ads, errno.c, errout.adb, errout.ads: Likewise.
	* erroutc.adb, erroutc.ads, errutil.adb, errutil.ads: Likewise.
	* eval_fat.adb, eval_fat.ads, exit.c, exp_aggr.adb, exp_aggr.ads: Likewise.
	* exp_atag.adb, exp_atag.ads, exp_attr.adb, exp_attr.ads: Likewise.
	* exp_cg.adb, exp_cg.ads, exp_ch10.ads, exp_ch11.adb: Likewise.
	* exp_ch11.ads, exp_ch12.adb, exp_ch12.ads, exp_ch13.adb: Likewise.
	* exp_ch13.ads, exp_ch2.adb, exp_ch2.ads, exp_ch3.adb: Likewise.
	* exp_ch3.ads, exp_ch4.adb, exp_ch4.ads, exp_ch5.adb, exp_ch5.ads: Likewise.
	* exp_ch6.adb, exp_ch6.ads, exp_ch7.adb, exp_ch7.ads, exp_ch8.adb: Likewise.
	* exp_ch8.ads, exp_ch9.adb, exp_ch9.ads, exp_code.adb: Likewise.
	* exp_code.ads, exp_dbug.adb, exp_dbug.ads, exp_disp.adb: Likewise.
	* exp_disp.ads, exp_dist.adb, exp_dist.ads, exp_fixd.adb: Likewise.
	* exp_fixd.ads, exp_imgv.adb, exp_imgv.ads, exp_intr.adb: Likewise.
	* exp_intr.ads, exp_pakd.adb, exp_pakd.ads, exp_prag.adb: Likewise.
	* exp_prag.ads, exp_put_image.adb, exp_put_image.ads, exp_sel.adb: Likewise.
	* exp_sel.ads, exp_smem.adb, exp_smem.ads, exp_spark.adb: Likewise.
	* exp_spark.ads, exp_strm.adb, exp_strm.ads, exp_tss.adb: Likewise.
	* exp_tss.ads, exp_unst.adb, exp_unst.ads, exp_util.adb: Likewise.
	* exp_util.ads, expander.adb, expander.ads, expect.c, fe.h: Likewise.
	* final.c, fmap.adb, fmap.ads, fname-sf.adb, fname-sf.ads: Likewise.
	* fname-uf.adb, fname-uf.ads, fname.adb, fname.ads, freeze.adb: Likewise.
	* freeze.ads, frontend.adb, frontend.ads, gen_il-fields.ads: Likewise.
	* gen_il-gen-gen_entities.adb, gen_il-gen-gen_nodes.adb: Likewise.
	* gen_il-gen.adb, gen_il-gen.ads, gen_il-internals.adb: Likewise.
	* gen_il-internals.ads, gen_il-main.adb, gen_il-types.ads: Likewise.
	* gen_il.adb, gen_il.ads, get_scos.adb, get_scos.ads: Likewise.
	* get_targ.adb, get_targ.ads, ghost.adb, ghost.ads, gnat1drv.adb: Likewise.
	* gnat1drv.ads, gnat_cuda.adb, gnat_cuda.ads: Likewise.
	* gnatbind.adb, gnatbind.ads, gnatchop.adb: Likewise.
	* gnatclean.adb, gnatcmd.adb, gnatcmd.ads, gnatdll.adb: Likewise.
	* gnatkr.adb, gnatkr.ads, gnatlink.adb, gnatlink.ads, gnatls.adb: Likewise.
	* gnatls.ads, gnatmake.adb, gnatmake.ads, gnatname.adb: Likewise.
	* gnatname.ads, gnatprep.adb, gnatprep.ads: Likewise.
	* gprep.adb, gprep.ads, gsocket.h: Likewise.
	* hostparm.ads: Likewise.
	* impunit.adb, impunit.ads, indepsw-aix.adb, indepsw-darwin.adb: Likewise.
	* indepsw-gnu.adb, indepsw.adb, indepsw.ads, init.c: Likewise.
	* initialize.c, inline.adb, inline.ads, itypes.adb, itypes.ads: Likewise.
	* krunch.adb, krunch.ads, layout.adb, layout.ads: Likewise.
	* lib-list.adb, lib-load.adb, lib-load.ads, lib-sort.adb: Likewise.
	* lib-util.adb, lib-util.ads, lib-writ.adb, lib-writ.ads: Likewise.
	* lib-xref-spark_specific.adb, lib-xref.adb, lib-xref.ads: Likewise.
	* lib.adb, lib.ads, libgnarl/a-astaco.adb, libgnarl/a-dispat.adb: Likewise.
	* libgnarl/a-dynpri.adb, libgnarl/a-etgrbu.ads: Likewise.
	* libgnarl/a-exetim__darwin.adb, libgnarl/a-exetim__default.ads: Likewise.
	* libgnarl/a-exetim__mingw.adb, libgnarl/a-exetim__mingw.ads: Likewise.
	* libgnarl/a-exetim__posix.adb, libgnarl/a-interr.adb: Likewise.
	* libgnarl/a-interr.ads, libgnarl/a-intnam.ads: Likewise.
	* libgnarl/a-intnam__aix.ads, libgnarl/a-intnam__darwin.ads: Likewise.
	* libgnarl/a-intnam__dragonfly.ads, libgnarl/a-intnam__dummy.ads: Likewise.
	* libgnarl/a-intnam__freebsd.ads, libgnarl/a-intnam__hpux.ads: Likewise.
	* libgnarl/a-intnam__linux.ads, libgnarl/a-intnam__lynxos.ads: Likewise.
	* libgnarl/a-intnam__mingw.ads, libgnarl/a-intnam__qnx.ads: Likewise.
	* libgnarl/a-intnam__rtems.ads, libgnarl/a-intnam__solaris.ads: Likewise.
	* libgnarl/a-intnam__vxworks.ads, libgnarl/a-reatim.adb: Likewise.
	* libgnarl/a-reatim.ads, libgnarl/a-retide.adb: Likewise.
	* libgnarl/a-retide.ads, libgnarl/a-rttiev.adb: Likewise.
	* libgnarl/a-rttiev.ads, libgnarl/a-synbar.adb: Likewise.
	* libgnarl/a-synbar.ads, libgnarl/a-synbar__posix.adb: Likewise.
	* libgnarl/a-synbar__posix.ads, libgnarl/a-sytaco.adb: Likewise.
	* libgnarl/a-sytaco.ads, libgnarl/a-tasatt.adb: Likewise.
	* libgnarl/a-tasatt.ads, libgnarl/a-taside.adb: Likewise.
	* libgnarl/a-taside.ads, libgnarl/a-tasini.adb: Likewise.
	* libgnarl/a-tasini.ads, libgnarl/a-taster.adb: Likewise.
	* libgnarl/g-boubuf.adb, libgnarl/g-boubuf.ads: Likewise.
	* libgnarl/g-boumai.ads, libgnarl/g-semaph.adb: Likewise.
	* libgnarl/g-semaph.ads, libgnarl/g-signal.adb: Likewise.
	* libgnarl/g-signal.ads, libgnarl/g-tastus.ads: Likewise.
	* libgnarl/g-thread.adb, libgnarl/g-thread.ads: Likewise.
	* libgnarl/i-vxinco.adb, libgnarl/i-vxinco.ads: Likewise.
	* libgnarl/s-inmaop.ads, libgnarl/s-inmaop__dummy.adb: Likewise.
	* libgnarl/s-inmaop__hwint.adb, libgnarl/s-inmaop__posix.adb: Likewise.
	* libgnarl/s-interr.adb, libgnarl/s-interr.ads: Likewise.
	* libgnarl/s-interr__dummy.adb, libgnarl/s-interr__hwint.adb: Likewise.
	* libgnarl/s-interr__sigaction.adb: Likewise.
	* libgnarl/s-interr__vxworks.adb, libgnarl/s-intman.ads: Likewise.
	* libgnarl/s-intman__android.adb, libgnarl/s-intman__dummy.adb: Likewise.
	* libgnarl/s-intman__lynxos.adb, libgnarl/s-intman__mingw.adb: Likewise.
	* libgnarl/s-intman__posix.adb, libgnarl/s-intman__qnx.adb: Likewise.
	* libgnarl/s-intman__rtems.adb, libgnarl/s-intman__rtems.ads: Likewise.
	* libgnarl/s-intman__solaris.adb, libgnarl/s-intman__susv3.adb: Likewise.
	* libgnarl/s-intman__vxworks.adb, libgnarl/s-intman__vxworks.ads: Likewise.
	* libgnarl/s-linux.ads, libgnarl/s-linux__alpha.ads: Likewise.
	* libgnarl/s-linux__android.ads, libgnarl/s-linux__hppa.ads: Likewise.
	* libgnarl/s-linux__mips.ads, libgnarl/s-linux__riscv.ads: Likewise.
	* libgnarl/s-linux__sparc.ads, libgnarl/s-linux__x32.ads: Likewise.
	* libgnarl/s-mudido.adb, libgnarl/s-mudido__affinity.adb: Likewise.
	* libgnarl/s-osinte__aix.adb, libgnarl/s-osinte__aix.ads: Likewise.
	* libgnarl/s-osinte__android.adb, libgnarl/s-osinte__android.ads: Likewise.
	* libgnarl/s-osinte__darwin.adb, libgnarl/s-osinte__darwin.ads: Likewise.
	* libgnarl/s-osinte__dragonfly.adb: Likewise.
	* libgnarl/s-osinte__dragonfly.ads, libgnarl/s-osinte__dummy.ads: Likewise.
	* libgnarl/s-osinte__freebsd.adb, libgnarl/s-osinte__freebsd.ads: Likewise.
	* libgnarl/s-osinte__gnu.adb, libgnarl/s-osinte__gnu.ads: Likewise.
	* libgnarl/s-osinte__hpux-dce.adb: Likewise.
	* libgnarl/s-osinte__hpux-dce.ads, libgnarl/s-osinte__hpux.ads: Likewise.
	* libgnarl/s-osinte__kfreebsd-gnu.ads: Likewise.
	* libgnarl/s-osinte__linux.ads, libgnarl/s-osinte__lynxos178.adb: Likewise.
	* libgnarl/s-osinte__lynxos178e.ads, libgnarl/s-osinte__mingw.ads: Likewise.
	* libgnarl/s-osinte__posix.adb, libgnarl/s-osinte__qnx.adb: Likewise.
	* libgnarl/s-osinte__qnx.ads, libgnarl/s-osinte__rtems.adb: Likewise.
	* libgnarl/s-osinte__rtems.ads, libgnarl/s-osinte__solaris.adb: Likewise.
	* libgnarl/s-osinte__solaris.ads, libgnarl/s-osinte__vxworks.adb: Likewise.
	* libgnarl/s-osinte__vxworks.ads, libgnarl/s-osinte__x32.adb: Likewise.
	* libgnarl/s-proinf.adb, libgnarl/s-proinf.ads: Likewise.
	* libgnarl/s-putaim.adb, libgnarl/s-putaim.ads: Likewise.
	* libgnarl/s-qnx.ads, libgnarl/s-solita.adb: Likewise.
	* libgnarl/s-solita.ads, libgnarl/s-stusta.adb: Likewise.
	* libgnarl/s-stusta.ads, libgnarl/s-taasde.adb: Likewise.
	* libgnarl/s-taasde.ads, libgnarl/s-tadeca.adb: Likewise.
	* libgnarl/s-tadeca.ads, libgnarl/s-tadert.adb: Likewise.
	* libgnarl/s-tadert.ads, libgnarl/s-taenca.adb: Likewise.
	* libgnarl/s-taenca.ads, libgnarl/s-taprob.adb: Likewise.
	* libgnarl/s-taprob.ads, libgnarl/s-taprop.ads: Likewise.
	* libgnarl/s-taprop__dummy.adb, libgnarl/s-taprop__hpux-dce.adb: Likewise.
	* libgnarl/s-taprop__linux.adb, libgnarl/s-taprop__mingw.adb: Likewise.
	* libgnarl/s-taprop__posix.adb, libgnarl/s-taprop__qnx.adb: Likewise.
	* libgnarl/s-taprop__rtems.adb, libgnarl/s-taprop__solaris.adb: Likewise.
	* libgnarl/s-taprop__vxworks.adb, libgnarl/s-tarest.adb: Likewise.
	* libgnarl/s-tarest.ads, libgnarl/s-tasdeb.adb: Likewise.
	* libgnarl/s-tasdeb.ads, libgnarl/s-tasinf.adb: Likewise.
	* libgnarl/s-tasinf.ads, libgnarl/s-tasinf__linux.adb: Likewise.
	* libgnarl/s-tasinf__linux.ads, libgnarl/s-tasinf__mingw.adb: Likewise.
	* libgnarl/s-tasinf__mingw.ads, libgnarl/s-tasinf__solaris.adb: Likewise.
	* libgnarl/s-tasinf__solaris.ads, libgnarl/s-tasinf__vxworks.ads: Likewise.
	* libgnarl/s-tasini.adb, libgnarl/s-tasini.ads: Likewise.
	* libgnarl/s-taskin.adb, libgnarl/s-taskin.ads: Likewise.
	* libgnarl/s-taspri__dummy.ads, libgnarl/s-taspri__hpux-dce.ads: Likewise.
	* libgnarl/s-taspri__lynxos.ads, libgnarl/s-taspri__mingw.ads: Likewise.
	* libgnarl/s-taspri__posix-noaltstack.ads: Likewise.
	* libgnarl/s-taspri__posix.ads, libgnarl/s-taspri__solaris.ads: Likewise.
	* libgnarl/s-taspri__vxworks.ads, libgnarl/s-tasque.adb: Likewise.
	* libgnarl/s-tasque.ads, libgnarl/s-tasren.adb: Likewise.
	* libgnarl/s-tasren.ads, libgnarl/s-tasres.ads: Likewise.
	* libgnarl/s-tassta.adb, libgnarl/s-tassta.ads: Likewise.
	* libgnarl/s-tasuti.adb, libgnarl/s-tasuti.ads: Likewise.
	* libgnarl/s-tataat.adb, libgnarl/s-tataat.ads: Likewise.
	* libgnarl/s-tpinop.adb, libgnarl/s-tpinop.ads: Likewise.
	* libgnarl/s-tpoaal.adb, libgnarl/s-tpoben.adb: Likewise.
	* libgnarl/s-tpoben.ads, libgnarl/s-tpobmu.adb: Likewise.
	* libgnarl/s-tpobmu.ads, libgnarl/s-tpobop.adb: Likewise.
	* libgnarl/s-tpobop.ads, libgnarl/s-tpopmo.adb: Likewise.
	* libgnarl/s-tpopsp__posix-foreign.adb: Likewise.
	* libgnarl/s-tpopsp__posix.adb, libgnarl/s-tpopsp__solaris.adb: Likewise.
	* libgnarl/s-tpopsp__tls.adb, libgnarl/s-tpopsp__vxworks-rtp.adb: Likewise.
	* libgnarl/s-tpopsp__vxworks-tls.adb: Likewise.
	* libgnarl/s-tpopsp__vxworks.adb, libgnarl/s-tporft.adb: Likewise.
	* libgnarl/s-tposen.adb, libgnarl/s-tposen.ads: Likewise.
	* libgnarl/s-vxwext.adb, libgnarl/s-vxwext.ads: Likewise.
	* libgnarl/s-vxwext__kernel-smp.adb: Likewise.
	* libgnarl/s-vxwext__kernel.adb, libgnarl/s-vxwext__kernel.ads: Likewise.
	* libgnarl/s-vxwext__rtp-smp.adb, libgnarl/s-vxwext__rtp.adb: Likewise.
	* libgnarl/s-vxwext__rtp.ads, libgnarl/s-vxwork__aarch64.ads: Likewise.
	* libgnarl/s-vxwork__arm.ads, libgnarl/s-vxwork__ppc.ads: Likewise.
	* libgnarl/s-vxwork__x86.ads, libgnarl/thread.c: Likewise.
	* libgnat/a-assert.adb, libgnat/a-assert.ads: Likewise.
	* libgnat/a-btgbso.adb, libgnat/a-btgbso.ads: Likewise.
	* libgnat/a-calari.adb, libgnat/a-calari.ads: Likewise.
	* libgnat/a-calcon.adb, libgnat/a-calcon.ads: Likewise.
	* libgnat/a-caldel.adb, libgnat/a-caldel.ads: Likewise.
	* libgnat/a-calend.adb, libgnat/a-calend.ads: Likewise.
	* libgnat/a-calfor.adb, libgnat/a-calfor.ads: Likewise.
	* libgnat/a-catizo.adb, libgnat/a-cbdlli.adb: Likewise.
	* libgnat/a-cbdlli.ads, libgnat/a-cbhama.adb: Likewise.
	* libgnat/a-cbhama.ads, libgnat/a-cbhase.adb: Likewise.
	* libgnat/a-cbhase.ads, libgnat/a-cbmutr.adb: Likewise.
	* libgnat/a-cbmutr.ads, libgnat/a-cborma.adb: Likewise.
	* libgnat/a-cborma.ads, libgnat/a-cborse.adb: Likewise.
	* libgnat/a-cborse.ads, libgnat/a-cbprqu.adb: Likewise.
	* libgnat/a-cbprqu.ads, libgnat/a-cbsyqu.adb: Likewise.
	* libgnat/a-cbsyqu.ads, libgnat/a-cdlili.adb: Likewise.
	* libgnat/a-cdlili.ads, libgnat/a-cfdlli.ads: Likewise.
	* libgnat/a-cfhama.ads, libgnat/a-cfhase.ads: Likewise.
	* libgnat/a-cfidll.ads, libgnat/a-cfinse.ads: Likewise.
	* libgnat/a-cfinve.ads, libgnat/a-cforma.ads: Likewise.
	* libgnat/a-cforse.ads, libgnat/a-cgaaso.adb: Likewise.
	* libgnat/a-cgaaso.ads, libgnat/a-cgarso.adb: Likewise.
	* libgnat/a-cgcaso.adb, libgnat/a-chacon.adb: Likewise.
	* libgnat/a-chacon.ads, libgnat/a-chahan.adb: Likewise.
	* libgnat/a-chahan.ads, libgnat/a-chlat9.ads: Likewise.
	* libgnat/a-chtgbk.adb, libgnat/a-chtgbk.ads: Likewise.
	* libgnat/a-chtgbo.adb, libgnat/a-chtgbo.ads: Likewise.
	* libgnat/a-chtgfk.adb, libgnat/a-chtgfk.ads: Likewise.
	* libgnat/a-chtgfo.adb, libgnat/a-chtgfo.ads: Likewise.
	* libgnat/a-chtgke.adb, libgnat/a-chtgke.ads: Likewise.
	* libgnat/a-chtgop.adb, libgnat/a-chtgop.ads: Likewise.
	* libgnat/a-chzla1.ads, libgnat/a-chzla9.ads: Likewise.
	* libgnat/a-cidlli.adb, libgnat/a-cidlli.ads: Likewise.
	* libgnat/a-cihama.adb, libgnat/a-cihama.ads: Likewise.
	* libgnat/a-cihase.adb, libgnat/a-cihase.ads: Likewise.
	* libgnat/a-cimutr.adb, libgnat/a-cimutr.ads: Likewise.
	* libgnat/a-ciorma.adb, libgnat/a-ciorma.ads: Likewise.
	* libgnat/a-ciormu.adb, libgnat/a-ciormu.ads: Likewise.
	* libgnat/a-ciorse.adb, libgnat/a-ciorse.ads: Likewise.
	* libgnat/a-clrefi.adb, libgnat/a-clrefi.ads: Likewise.
	* libgnat/a-coboho.adb, libgnat/a-coboho.ads: Likewise.
	* libgnat/a-cobove.adb, libgnat/a-cobove.ads: Likewise.
	* libgnat/a-cofove.ads, libgnat/a-cofuma.ads: Likewise.
	* libgnat/a-cofuse.ads, libgnat/a-cofuve.ads: Likewise.
	* libgnat/a-cogeso.adb, libgnat/a-cogeso.ads: Likewise.
	* libgnat/a-cohama.adb, libgnat/a-cohama.ads: Likewise.
	* libgnat/a-cohase.adb, libgnat/a-cohase.ads: Likewise.
	* libgnat/a-cohata.ads, libgnat/a-coinho.adb: Likewise.
	* libgnat/a-coinho.ads, libgnat/a-coinho__shared.adb: Likewise.
	* libgnat/a-coinho__shared.ads, libgnat/a-coinve.adb: Likewise.
	* libgnat/a-coinve.ads, libgnat/a-colien.adb: Likewise.
	* libgnat/a-colien.ads, libgnat/a-colire.adb: Likewise.
	* libgnat/a-colire.ads, libgnat/a-comlin.adb: Likewise.
	* libgnat/a-comlin.ads, libgnat/a-comutr.adb: Likewise.
	* libgnat/a-comutr.ads, libgnat/a-conhel.adb: Likewise.
	* libgnat/a-conhel.ads, libgnat/a-convec.adb: Likewise.
	* libgnat/a-convec.ads, libgnat/a-coorma.adb: Likewise.
	* libgnat/a-coorma.ads, libgnat/a-coormu.adb: Likewise.
	* libgnat/a-coormu.ads, libgnat/a-coorse.adb: Likewise.
	* libgnat/a-coorse.ads, libgnat/a-coprnu.adb: Likewise.
	* libgnat/a-coprnu.ads, libgnat/a-costso.adb: Likewise.
	* libgnat/a-costso.ads, libgnat/a-crbltr.ads: Likewise.
	* libgnat/a-crbtgk.adb, libgnat/a-crbtgk.ads: Likewise.
	* libgnat/a-crbtgo.adb, libgnat/a-crbtgo.ads: Likewise.
	* libgnat/a-crdlli.adb, libgnat/a-crdlli.ads: Likewise.
	* libgnat/a-csquin.ads, libgnat/a-cuprqu.adb: Likewise.
	* libgnat/a-cuprqu.ads, libgnat/a-cusyqu.adb: Likewise.
	* libgnat/a-cusyqu.ads, libgnat/a-cwila1.ads: Likewise.
	* libgnat/a-cwila9.ads, libgnat/a-decima.adb: Likewise.
	* libgnat/a-decima.ads, libgnat/a-decima__128.ads: Likewise.
	* libgnat/a-dhfina.adb, libgnat/a-dhfina.ads: Likewise.
	* libgnat/a-diocst.adb, libgnat/a-diocst.ads: Likewise.
	* libgnat/a-direct.adb, libgnat/a-direct.ads: Likewise.
	* libgnat/a-direio.adb, libgnat/a-direio.ads: Likewise.
	* libgnat/a-dirval.adb, libgnat/a-dirval.ads: Likewise.
	* libgnat/a-dirval__mingw.adb, libgnat/a-einuoc.adb: Likewise.
	* libgnat/a-einuoc.ads, libgnat/a-elchha.adb: Likewise.
	* libgnat/a-elchha.ads, libgnat/a-envvar.adb: Likewise.
	* libgnat/a-excach.adb, libgnat/a-except.adb: Likewise.
	* libgnat/a-except.ads, libgnat/a-exctra.adb: Likewise.
	* libgnat/a-exctra.ads, libgnat/a-exexda.adb: Likewise.
	* libgnat/a-exexpr.adb, libgnat/a-exextr.adb: Likewise.
	* libgnat/a-exstat.adb, libgnat/a-finali.adb: Likewise.
	* libgnat/a-finali.ads, libgnat/a-locale.adb: Likewise.
	* libgnat/a-locale.ads, libgnat/a-nagefl.ads: Likewise.
	* libgnat/a-naliop.ads, libgnat/a-naliop__nolibm.ads: Likewise.
	* libgnat/a-nallfl.ads, libgnat/a-nallfl__wraplf.ads: Likewise.
	* libgnat/a-nalofl.ads, libgnat/a-nalofl__simd.ads: Likewise.
	* libgnat/a-nashfl.ads, libgnat/a-nashfl__wraplf.ads: Likewise.
	* libgnat/a-nbnbig.adb, libgnat/a-nbnbin.adb: Likewise.
	* libgnat/a-nbnbin__gmp.adb, libgnat/a-nbnbre.adb: Likewise.
	* libgnat/a-ngcefu.adb, libgnat/a-ngcoar.adb: Likewise.
	* libgnat/a-ngcoty.adb, libgnat/a-ngcoty.ads: Likewise.
	* libgnat/a-ngelfu.adb, libgnat/a-ngelfu.ads: Likewise.
	* libgnat/a-ngrear.adb, libgnat/a-ngrear.ads: Likewise.
	* libgnat/a-nuauco.ads, libgnat/a-nuauco__x86.ads: Likewise.
	* libgnat/a-nuaufl.ads, libgnat/a-nuaufl__simd.ads: Likewise.
	* libgnat/a-nuaufl__wraplf.ads, libgnat/a-nudira.adb: Likewise.
	* libgnat/a-nudira.ads, libgnat/a-nuflra.adb: Likewise.
	* libgnat/a-nuflra.ads, libgnat/a-numaux.ads: Likewise.
	* libgnat/a-rbtgbk.adb, libgnat/a-rbtgbk.ads: Likewise.
	* libgnat/a-rbtgbo.adb, libgnat/a-rbtgbo.ads: Likewise.
	* libgnat/a-rbtgso.adb, libgnat/a-rbtgso.ads: Likewise.
	* libgnat/a-sbecin.adb, libgnat/a-sbecin.ads: Likewise.
	* libgnat/a-sbhcin.adb, libgnat/a-sbhcin.ads: Likewise.
	* libgnat/a-sblcin.adb, libgnat/a-sblcin.ads: Likewise.
	* libgnat/a-secain.adb, libgnat/a-secain.ads: Likewise.
	* libgnat/a-sequio.adb, libgnat/a-sequio.ads: Likewise.
	* libgnat/a-sfecin.ads, libgnat/a-sfhcin.ads: Likewise.
	* libgnat/a-sflcin.ads, libgnat/a-shcain.adb: Likewise.
	* libgnat/a-shcain.ads, libgnat/a-siocst.adb: Likewise.
	* libgnat/a-siocst.ads, libgnat/a-slcain.adb: Likewise.
	* libgnat/a-slcain.ads, libgnat/a-ssicst.adb: Likewise.
	* libgnat/a-ssicst.ads, libgnat/a-stboha.adb: Likewise.
	* libgnat/a-stbubo.adb, libgnat/a-stbubo.ads: Likewise.
	* libgnat/a-stbufi.adb, libgnat/a-stbufi.ads: Likewise.
	* libgnat/a-stbufo.adb, libgnat/a-stbufo.ads: Likewise.
	* libgnat/a-stbuun.adb, libgnat/a-stbuut.adb: Likewise.
	* libgnat/a-stbuut.ads, libgnat/a-stmaco.ads: Likewise.
	* libgnat/a-storio.adb, libgnat/a-strbou.adb: Likewise.
	* libgnat/a-strbou.ads, libgnat/a-stream.adb: Likewise.
	* libgnat/a-stream.ads, libgnat/a-strfix.adb: Likewise.
	* libgnat/a-strhas.adb, libgnat/a-strmap.adb: Likewise.
	* libgnat/a-strmap.ads, libgnat/a-strsea.adb: Likewise.
	* libgnat/a-strsea.ads, libgnat/a-strsto.ads: Likewise.
	* libgnat/a-strsup.adb, libgnat/a-strsup.ads: Likewise.
	* libgnat/a-strunb.adb, libgnat/a-strunb.ads: Likewise.
	* libgnat/a-strunb__shared.adb, libgnat/a-strunb__shared.ads: Likewise.
	* libgnat/a-ststbo.adb, libgnat/a-ststbo.ads: Likewise.
	* libgnat/a-ststio.adb, libgnat/a-ststio.ads: Likewise.
	* libgnat/a-ststun.adb, libgnat/a-ststun.ads: Likewise.
	* libgnat/a-sttebu.adb, libgnat/a-stunau.adb: Likewise.
	* libgnat/a-stunau.ads, libgnat/a-stunau__shared.adb: Likewise.
	* libgnat/a-stunha.adb, libgnat/a-stuten.adb: Likewise.
	* libgnat/a-stwibo.adb, libgnat/a-stwibo.ads: Likewise.
	* libgnat/a-stwifi.adb, libgnat/a-stwiha.adb: Likewise.
	* libgnat/a-stwima.adb, libgnat/a-stwima.ads: Likewise.
	* libgnat/a-stwise.adb, libgnat/a-stwise.ads: Likewise.
	* libgnat/a-stwisu.adb, libgnat/a-stwisu.ads: Likewise.
	* libgnat/a-stwiun.adb, libgnat/a-stwiun.ads: Likewise.
	* libgnat/a-stwiun__shared.adb, libgnat/a-stwiun__shared.ads: Likewise.
	* libgnat/a-stzbou.adb, libgnat/a-stzbou.ads: Likewise.
	* libgnat/a-stzfix.adb, libgnat/a-stzhas.adb: Likewise.
	* libgnat/a-stzmap.adb, libgnat/a-stzmap.ads: Likewise.
	* libgnat/a-stzsea.adb, libgnat/a-stzsea.ads: Likewise.
	* libgnat/a-stzsup.adb, libgnat/a-stzsup.ads: Likewise.
	* libgnat/a-stzunb.adb, libgnat/a-stzunb.ads: Likewise.
	* libgnat/a-stzunb__shared.adb, libgnat/a-stzunb__shared.ads: Likewise.
	* libgnat/a-suecin.adb, libgnat/a-suecin.ads: Likewise.
	* libgnat/a-suenco.adb, libgnat/a-suenst.adb: Likewise.
	* libgnat/a-suewst.adb, libgnat/a-suezst.adb: Likewise.
	* libgnat/a-suhcin.adb, libgnat/a-suhcin.ads: Likewise.
	* libgnat/a-sulcin.adb, libgnat/a-sulcin.ads: Likewise.
	* libgnat/a-suteio.adb, libgnat/a-suteio.ads: Likewise.
	* libgnat/a-suteio__shared.adb, libgnat/a-swbwha.adb: Likewise.
	* libgnat/a-swmwco.ads, libgnat/a-swunau.adb: Likewise.
	* libgnat/a-swunau.ads, libgnat/a-swunau__shared.adb: Likewise.
	* libgnat/a-swuwha.adb, libgnat/a-swuwti.adb: Likewise.
	* libgnat/a-swuwti.ads, libgnat/a-swuwti__shared.adb: Likewise.
	* libgnat/a-szbzha.adb, libgnat/a-szmzco.ads: Likewise.
	* libgnat/a-szunau.adb, libgnat/a-szunau.ads: Likewise.
	* libgnat/a-szunau__shared.adb, libgnat/a-szuzha.adb: Likewise.
	* libgnat/a-szuzti.adb, libgnat/a-szuzti.ads: Likewise.
	* libgnat/a-szuzti__shared.adb, libgnat/a-tags.adb: Likewise.
	* libgnat/a-tags.ads, libgnat/a-teioed.adb, libgnat/a-teioed.ads: Likewise.
	* libgnat/a-textio.adb, libgnat/a-textio.ads: Likewise.
	* libgnat/a-tiboio.adb, libgnat/a-ticoau.adb: Likewise.
	* libgnat/a-ticoau.ads, libgnat/a-ticoio.adb: Likewise.
	* libgnat/a-ticoio.ads, libgnat/a-tideau.adb: Likewise.
	* libgnat/a-tideau.ads, libgnat/a-tideio.adb: Likewise.
	* libgnat/a-tideio.ads, libgnat/a-tideio__128.adb: Likewise.
	* libgnat/a-tienau.adb, libgnat/a-tienau.ads: Likewise.
	* libgnat/a-tienio.adb, libgnat/a-tifiau.adb: Likewise.
	* libgnat/a-tifiau.ads, libgnat/a-tifiio.adb: Likewise.
	* libgnat/a-tifiio__128.adb, libgnat/a-tiflau.adb: Likewise.
	* libgnat/a-tiflau.ads, libgnat/a-tiflio.adb: Likewise.
	* libgnat/a-tiflio.ads, libgnat/a-tigeau.adb: Likewise.
	* libgnat/a-tigeau.ads, libgnat/a-tigeli.adb: Likewise.
	* libgnat/a-tiinau.adb, libgnat/a-tiinau.ads: Likewise.
	* libgnat/a-tiinio.adb, libgnat/a-tiinio.ads: Likewise.
	* libgnat/a-tiinio__128.adb, libgnat/a-timoio.adb: Likewise.
	* libgnat/a-timoio.ads, libgnat/a-timoio__128.adb: Likewise.
	* libgnat/a-tiocst.adb, libgnat/a-tiocst.ads: Likewise.
	* libgnat/a-tirsfi.adb, libgnat/a-tirsfi.ads: Likewise.
	* libgnat/a-titest.adb, libgnat/a-undesu.adb: Likewise.
	* libgnat/a-wichha.adb, libgnat/a-wichun.adb: Likewise.
	* libgnat/a-wichun.ads, libgnat/a-witeio.adb: Likewise.
	* libgnat/a-witeio.ads, libgnat/a-wrstfi.adb: Likewise.
	* libgnat/a-wrstfi.ads, libgnat/a-wtcoau.adb: Likewise.
	* libgnat/a-wtcoau.ads, libgnat/a-wtcoio.adb: Likewise.
	* libgnat/a-wtcstr.adb, libgnat/a-wtcstr.ads: Likewise.
	* libgnat/a-wtdeau.adb, libgnat/a-wtdeau.ads: Likewise.
	* libgnat/a-wtdeio.adb, libgnat/a-wtdeio__128.adb: Likewise.
	* libgnat/a-wtedit.adb, libgnat/a-wtedit.ads: Likewise.
	* libgnat/a-wtenau.adb, libgnat/a-wtenau.ads: Likewise.
	* libgnat/a-wtenio.adb, libgnat/a-wtfiau.adb: Likewise.
	* libgnat/a-wtfiau.ads, libgnat/a-wtfiio.adb: Likewise.
	* libgnat/a-wtfiio__128.adb, libgnat/a-wtflau.adb: Likewise.
	* libgnat/a-wtflau.ads, libgnat/a-wtflio.adb: Likewise.
	* libgnat/a-wtgeau.adb, libgnat/a-wtgeau.ads: Likewise.
	* libgnat/a-wtinau.adb, libgnat/a-wtinau.ads: Likewise.
	* libgnat/a-wtinio.adb, libgnat/a-wtinio__128.adb: Likewise.
	* libgnat/a-wtmoio.adb, libgnat/a-wtmoio.ads: Likewise.
	* libgnat/a-wtmoio__128.adb, libgnat/a-wttest.adb: Likewise.
	* libgnat/a-wwboio.adb, libgnat/a-zchhan.adb: Likewise.
	* libgnat/a-zchuni.adb, libgnat/a-zchuni.ads: Likewise.
	* libgnat/a-zrstfi.adb, libgnat/a-zrstfi.ads: Likewise.
	* libgnat/a-ztcoau.adb, libgnat/a-ztcoio.adb: Likewise.
	* libgnat/a-ztcstr.adb, libgnat/a-ztcstr.ads: Likewise.
	* libgnat/a-ztdeau.adb, libgnat/a-ztdeau.ads: Likewise.
	* libgnat/a-ztdeio.adb, libgnat/a-ztdeio__128.adb: Likewise.
	* libgnat/a-ztedit.adb, libgnat/a-ztedit.ads: Likewise.
	* libgnat/a-ztenau.adb, libgnat/a-ztenau.ads: Likewise.
	* libgnat/a-ztenio.adb, libgnat/a-ztexio.adb: Likewise.
	* libgnat/a-ztexio.ads, libgnat/a-ztfiau.adb: Likewise.
	* libgnat/a-ztfiau.ads, libgnat/a-ztfiio.adb: Likewise.
	* libgnat/a-ztfiio__128.adb, libgnat/a-ztflau.adb: Likewise.
	* libgnat/a-ztflau.ads, libgnat/a-ztflio.adb: Likewise.
	* libgnat/a-ztgeau.adb, libgnat/a-ztgeau.ads: Likewise.
	* libgnat/a-ztinau.adb, libgnat/a-ztinau.ads: Likewise.
	* libgnat/a-ztinio.adb, libgnat/a-ztinio__128.adb: Likewise.
	* libgnat/a-ztmoio.adb, libgnat/a-ztmoio__128.adb: Likewise.
	* libgnat/a-zttest.adb, libgnat/a-zzboio.adb: Likewise.
	* libgnat/g-allein.ads, libgnat/g-alleve.adb: Likewise.
	* libgnat/g-alleve.ads, libgnat/g-alleve__hard.adb: Likewise.
	* libgnat/g-alleve__hard.ads, libgnat/g-altcon.adb: Likewise.
	* libgnat/g-altcon.ads, libgnat/g-altive.ads: Likewise.
	* libgnat/g-alveop.adb, libgnat/g-alveop.ads: Likewise.
	* libgnat/g-alvety.ads, libgnat/g-alvevi.ads: Likewise.
	* libgnat/g-arrspl.adb, libgnat/g-arrspl.ads, libgnat/g-awk.adb: Likewise.
	* libgnat/g-awk.ads, libgnat/g-binenv.adb, libgnat/g-binenv.ads: Likewise.
	* libgnat/g-binsea.adb, libgnat/g-binsea.ads: Likewise.
	* libgnat/g-brapre.ads, libgnat/g-bubsor.adb: Likewise.
	* libgnat/g-bubsor.ads, libgnat/g-busora.adb: Likewise.
	* libgnat/g-busora.ads, libgnat/g-busorg.adb: Likewise.
	* libgnat/g-busorg.ads, libgnat/g-byorma.adb: Likewise.
	* libgnat/g-byorma.ads, libgnat/g-bytswa.adb: Likewise.
	* libgnat/g-bytswa.ads, libgnat/g-calend.adb: Likewise.
	* libgnat/g-calend.ads, libgnat/g-casuti.adb: Likewise.
	* libgnat/g-casuti.ads, libgnat/g-catiio.adb: Likewise.
	* libgnat/g-catiio.ads, libgnat/g-cgi.adb, libgnat/g-cgi.ads: Likewise.
	* libgnat/g-cgicoo.adb, libgnat/g-cgicoo.ads: Likewise.
	* libgnat/g-cgideb.adb, libgnat/g-cgideb.ads: Likewise.
	* libgnat/g-comlin.adb, libgnat/g-comlin.ads: Likewise.
	* libgnat/g-comver.adb, libgnat/g-comver.ads: Likewise.
	* libgnat/g-cppexc.adb, libgnat/g-cppexc.ads, libgnat/g-crc32.adb: Likewise.
	* libgnat/g-crc32.ads, libgnat/g-ctrl_c.adb, libgnat/g-ctrl_c.ads: Likewise.
	* libgnat/g-curexc.ads, libgnat/g-debpoo.adb: Likewise.
	* libgnat/g-debpoo.ads, libgnat/g-debuti.adb: Likewise.
	* libgnat/g-debuti.ads, libgnat/g-decstr.adb: Likewise.
	* libgnat/g-decstr.ads, libgnat/g-deutst.ads: Likewise.
	* libgnat/g-diopit.adb, libgnat/g-diopit.ads: Likewise.
	* libgnat/g-dirope.adb, libgnat/g-dirope.ads: Likewise.
	* libgnat/g-dynhta.adb, libgnat/g-dynhta.ads: Likewise.
	* libgnat/g-dyntab.adb, libgnat/g-dyntab.ads: Likewise.
	* libgnat/g-eacodu.adb, libgnat/g-encstr.adb: Likewise.
	* libgnat/g-encstr.ads, libgnat/g-enutst.ads: Likewise.
	* libgnat/g-excact.adb, libgnat/g-excact.ads: Likewise.
	* libgnat/g-except.ads, libgnat/g-exctra.adb: Likewise.
	* libgnat/g-exctra.ads, libgnat/g-expect.adb: Likewise.
	* libgnat/g-expect.ads, libgnat/g-exptty.adb: Likewise.
	* libgnat/g-exptty.ads, libgnat/g-flocon.ads: Likewise.
	* libgnat/g-forstr.adb, libgnat/g-forstr.ads: Likewise.
	* libgnat/g-gfmafu.ads, libgnat/g-graphs.adb: Likewise.
	* libgnat/g-graphs.ads, libgnat/g-heasor.adb: Likewise.
	* libgnat/g-heasor.ads, libgnat/g-hesora.adb: Likewise.
	* libgnat/g-hesora.ads, libgnat/g-hesorg.adb: Likewise.
	* libgnat/g-hesorg.ads, libgnat/g-htable.adb: Likewise.
	* libgnat/g-htable.ads, libgnat/g-io.adb, libgnat/g-io.ads: Likewise.
	* libgnat/g-io_aux.adb, libgnat/g-io_aux.ads, libgnat/g-lists.adb: Likewise.
	* libgnat/g-lists.ads, libgnat/g-locfil.adb, libgnat/g-locfil.ads: Likewise.
	* libgnat/g-mbdira.adb, libgnat/g-mbdira.ads: Likewise.
	* libgnat/g-mbflra.adb, libgnat/g-mbflra.ads, libgnat/g-md5.adb: Likewise.
	* libgnat/g-md5.ads, libgnat/g-memdum.adb, libgnat/g-memdum.ads: Likewise.
	* libgnat/g-moreex.adb, libgnat/g-moreex.ads: Likewise.
	* libgnat/g-os_lib.adb, libgnat/g-os_lib.ads: Likewise.
	* libgnat/g-pehage.adb, libgnat/g-pehage.ads: Likewise.
	* libgnat/g-rannum.adb, libgnat/g-rannum.ads: Likewise.
	* libgnat/g-regexp.adb, libgnat/g-regexp.ads: Likewise.
	* libgnat/g-regist.adb, libgnat/g-regist.ads: Likewise.
	* libgnat/g-regpat.adb, libgnat/g-regpat.ads: Likewise.
	* libgnat/g-rewdat.adb, libgnat/g-rewdat.ads: Likewise.
	* libgnat/g-sechas.adb, libgnat/g-sechas.ads: Likewise.
	* libgnat/g-sehamd.adb, libgnat/g-sehamd.ads: Likewise.
	* libgnat/g-sehash.adb, libgnat/g-sehash.ads: Likewise.
	* libgnat/g-sercom.adb, libgnat/g-sercom.ads: Likewise.
	* libgnat/g-sercom__linux.adb, libgnat/g-sercom__mingw.adb: Likewise.
	* libgnat/g-sestin.ads, libgnat/g-sets.adb, libgnat/g-sets.ads: Likewise.
	* libgnat/g-sha1.adb, libgnat/g-sha1.ads, libgnat/g-sha224.ads: Likewise.
	* libgnat/g-sha256.ads, libgnat/g-sha384.ads: Likewise.
	* libgnat/g-sha512.ads, libgnat/g-shsh32.adb: Likewise.
	* libgnat/g-shsh32.ads, libgnat/g-shsh64.adb: Likewise.
	* libgnat/g-shsh64.ads, libgnat/g-shshco.adb: Likewise.
	* libgnat/g-shshco.ads, libgnat/g-soccon.ads: Likewise.
	* libgnat/g-socket.adb, libgnat/g-socket.ads: Likewise.
	* libgnat/g-socket__dummy.adb, libgnat/g-socket__dummy.ads: Likewise.
	* libgnat/g-socpol.adb, libgnat/g-socpol.ads: Likewise.
	* libgnat/g-socpol__dummy.adb, libgnat/g-socpol__dummy.ads: Likewise.
	* libgnat/g-socthi.adb, libgnat/g-socthi.ads: Likewise.
	* libgnat/g-socthi__dummy.adb, libgnat/g-socthi__dummy.ads: Likewise.
	* libgnat/g-socthi__mingw.adb, libgnat/g-socthi__mingw.ads: Likewise.
	* libgnat/g-socthi__vxworks.adb, libgnat/g-socthi__vxworks.ads: Likewise.
	* libgnat/g-soliop.ads, libgnat/g-soliop__lynxos.ads: Likewise.
	* libgnat/g-soliop__mingw.ads, libgnat/g-soliop__qnx.ads: Likewise.
	* libgnat/g-soliop__solaris.ads, libgnat/g-sopowa.adb: Likewise.
	* libgnat/g-sopowa__mingw.adb, libgnat/g-sopowa__posix.adb: Likewise.
	* libgnat/g-sothco.adb, libgnat/g-sothco.ads: Likewise.
	* libgnat/g-sothco__dummy.adb, libgnat/g-sothco__dummy.ads: Likewise.
	* libgnat/g-souinf.ads, libgnat/g-spchge.adb: Likewise.
	* libgnat/g-spchge.ads, libgnat/g-speche.adb: Likewise.
	* libgnat/g-speche.ads, libgnat/g-spipat.adb: Likewise.
	* libgnat/g-spipat.ads, libgnat/g-spitbo.adb: Likewise.
	* libgnat/g-spitbo.ads, libgnat/g-spogwa.adb: Likewise.
	* libgnat/g-spogwa.ads, libgnat/g-sptabo.ads: Likewise.
	* libgnat/g-sptain.ads, libgnat/g-sptavs.ads, libgnat/g-sse.ads: Likewise.
	* libgnat/g-ssvety.ads, libgnat/g-sthcso.adb: Likewise.
	* libgnat/g-stheme.adb, libgnat/g-strhas.ads: Likewise.
	* libgnat/g-string.adb, libgnat/g-string.ads: Likewise.
	* libgnat/g-strspl.ads, libgnat/g-stseme.adb: Likewise.
	* libgnat/g-stsifd__sockets.adb, libgnat/g-table.adb: Likewise.
	* libgnat/g-table.ads, libgnat/g-tasloc.adb, libgnat/g-tasloc.ads: Likewise.
	* libgnat/g-timsta.adb, libgnat/g-timsta.ads: Likewise.
	* libgnat/g-traceb.adb, libgnat/g-traceb.ads: Likewise.
	* libgnat/g-trasym.adb, libgnat/g-trasym.ads, libgnat/g-tty.adb: Likewise.
	* libgnat/g-tty.ads, libgnat/g-u3spch.adb, libgnat/g-u3spch.ads: Likewise.
	* libgnat/g-utf_32.adb, libgnat/g-utf_32.ads: Likewise.
	* libgnat/g-wispch.adb, libgnat/g-wispch.ads: Likewise.
	* libgnat/g-wistsp.ads, libgnat/g-zspche.adb: Likewise.
	* libgnat/g-zspche.ads, libgnat/g-zstspl.ads, libgnat/gnat.ads: Likewise.
	* libgnat/i-c.adb, libgnat/i-cexten.ads: Likewise.
	* libgnat/i-cexten__128.ads, libgnat/i-cobol.adb: Likewise.
	* libgnat/i-cobol.ads, libgnat/i-cpoint.adb, libgnat/i-cpoint.ads: Likewise.
	* libgnat/i-cstrea.adb, libgnat/i-cstrea.ads: Likewise.
	* libgnat/i-cstrin.adb, libgnat/i-cstrin.ads: Likewise.
	* libgnat/i-fortra.adb, libgnat/i-pacdec.adb: Likewise.
	* libgnat/i-pacdec.ads, libgnat/i-vxwoio.adb: Likewise.
	* libgnat/i-vxwoio.ads, libgnat/i-vxwork.ads: Likewise.
	* libgnat/i-vxwork__x86.ads, libgnat/interfac.ads: Likewise.
	* libgnat/interfac__2020.ads, libgnat/memtrack.adb: Likewise.
	* libgnat/s-addima.adb, libgnat/s-addima.ads: Likewise.
	* libgnat/s-addope.adb, libgnat/s-addope.ads: Likewise.
	* libgnat/s-aoinar.adb, libgnat/s-aoinar.ads: Likewise.
	* libgnat/s-aomoar.adb, libgnat/s-aomoar.ads: Likewise.
	* libgnat/s-aotase.adb, libgnat/s-aotase.ads: Likewise.
	* libgnat/s-aridou.adb, libgnat/s-aridou.ads: Likewise.
	* libgnat/s-arit128.adb, libgnat/s-arit128.ads: Likewise.
	* libgnat/s-arit32.adb, libgnat/s-arit32.ads: Likewise.
	* libgnat/s-arit64.adb, libgnat/s-arit64.ads: Likewise.
	* libgnat/s-assert.adb, libgnat/s-assert.ads: Likewise.
	* libgnat/s-atacco.adb, libgnat/s-atacco.ads: Likewise.
	* libgnat/s-atocou.adb, libgnat/s-atocou.ads: Likewise.
	* libgnat/s-atocou__builtin.adb, libgnat/s-atoope.ads: Likewise.
	* libgnat/s-atopex.adb, libgnat/s-atopex.ads: Likewise.
	* libgnat/s-atopri.adb, libgnat/s-atopri.ads: Likewise.
	* libgnat/s-auxdec.adb, libgnat/s-auxdec.ads: Likewise.
	* libgnat/s-bignum.adb, libgnat/s-bignum.ads: Likewise.
	* libgnat/s-bitfie.ads, libgnat/s-bitops.adb: Likewise.
	* libgnat/s-bitops.ads, libgnat/s-bituti.adb: Likewise.
	* libgnat/s-bituti.ads, libgnat/s-boarop.ads: Likewise.
	* libgnat/s-boustr.adb, libgnat/s-boustr.ads: Likewise.
	* libgnat/s-bytswa.ads, libgnat/s-carsi8.adb: Likewise.
	* libgnat/s-carsi8.ads, libgnat/s-carun8.adb: Likewise.
	* libgnat/s-carun8.ads, libgnat/s-casi128.adb: Likewise.
	* libgnat/s-casi128.ads, libgnat/s-casi16.adb: Likewise.
	* libgnat/s-casi16.ads, libgnat/s-casi32.adb: Likewise.
	* libgnat/s-casi32.ads, libgnat/s-casi64.adb: Likewise.
	* libgnat/s-casi64.ads, libgnat/s-casuti.adb: Likewise.
	* libgnat/s-casuti.ads, libgnat/s-caun128.adb: Likewise.
	* libgnat/s-caun128.ads, libgnat/s-caun16.adb: Likewise.
	* libgnat/s-caun16.ads, libgnat/s-caun32.adb: Likewise.
	* libgnat/s-caun32.ads, libgnat/s-caun64.adb: Likewise.
	* libgnat/s-caun64.ads, libgnat/s-chepoo.ads: Likewise.
	* libgnat/s-commun.adb, libgnat/s-commun.ads: Likewise.
	* libgnat/s-conca2.adb, libgnat/s-conca2.ads: Likewise.
	* libgnat/s-conca3.adb, libgnat/s-conca3.ads: Likewise.
	* libgnat/s-conca4.adb, libgnat/s-conca4.ads: Likewise.
	* libgnat/s-conca5.adb, libgnat/s-conca5.ads: Likewise.
	* libgnat/s-conca6.adb, libgnat/s-conca6.ads: Likewise.
	* libgnat/s-conca7.adb, libgnat/s-conca7.ads: Likewise.
	* libgnat/s-conca8.adb, libgnat/s-conca8.ads: Likewise.
	* libgnat/s-conca9.adb, libgnat/s-conca9.ads, libgnat/s-crc32.adb: Likewise.
	* libgnat/s-crc32.ads, libgnat/s-crtl.ads, libgnat/s-dfmkio.ads: Likewise.
	* libgnat/s-dfmopr.ads, libgnat/s-dgmgop.ads: Likewise.
	* libgnat/s-diflio.adb, libgnat/s-diflio.ads: Likewise.
	* libgnat/s-diflmk.ads, libgnat/s-digemk.ads: Likewise.
	* libgnat/s-diinio.adb, libgnat/s-diinio.ads: Likewise.
	* libgnat/s-dilomk.ads, libgnat/s-dim.ads, libgnat/s-dimkio.ads: Likewise.
	* libgnat/s-dimmks.ads, libgnat/s-direio.adb: Likewise.
	* libgnat/s-direio.ads, libgnat/s-dlmkio.ads: Likewise.
	* libgnat/s-dlmopr.ads, libgnat/s-dmotpr.ads: Likewise.
	* libgnat/s-dorepr.adb, libgnat/s-dorepr__fma.adb: Likewise.
	* libgnat/s-dourea.adb, libgnat/s-dourea.ads: Likewise.
	* libgnat/s-dsaser.ads, libgnat/s-dwalin.adb: Likewise.
	* libgnat/s-dwalin.ads, libgnat/s-elaall.adb: Likewise.
	* libgnat/s-elaall.ads, libgnat/s-excdeb.adb: Likewise.
	* libgnat/s-excdeb.ads, libgnat/s-except.adb: Likewise.
	* libgnat/s-except.ads, libgnat/s-excmac__arm.adb: Likewise.
	* libgnat/s-excmac__arm.ads, libgnat/s-excmac__gcc.adb: Likewise.
	* libgnat/s-excmac__gcc.ads, libgnat/s-exctab.adb: Likewise.
	* libgnat/s-exctab.ads, libgnat/s-exctra.adb: Likewise.
	* libgnat/s-exctra.ads, libgnat/s-exnflt.ads: Likewise.
	* libgnat/s-exnint.adb, libgnat/s-exnint.ads: Likewise.
	* libgnat/s-exnlfl.ads, libgnat/s-exnllf.adb: Likewise.
	* libgnat/s-exnllf.ads, libgnat/s-exnlli.adb: Likewise.
	* libgnat/s-exnlli.ads, libgnat/s-exnllli.ads: Likewise.
	* libgnat/s-expint.adb, libgnat/s-expint.ads: Likewise.
	* libgnat/s-explli.adb, libgnat/s-explli.ads: Likewise.
	* libgnat/s-expllli.ads, libgnat/s-explllu.ads: Likewise.
	* libgnat/s-expllu.adb, libgnat/s-expllu.ads: Likewise.
	* libgnat/s-expmod.adb, libgnat/s-expmod.ads: Likewise.
	* libgnat/s-exponn.adb, libgnat/s-exponn.ads: Likewise.
	* libgnat/s-exponr.adb, libgnat/s-exponr.ads: Likewise.
	* libgnat/s-expont.adb, libgnat/s-expont.ads: Likewise.
	* libgnat/s-exponu.adb, libgnat/s-exponu.ads: Likewise.
	* libgnat/s-expuns.adb, libgnat/s-expuns.ads: Likewise.
	* libgnat/s-fatflt.ads, libgnat/s-fatgen.adb: Likewise.
	* libgnat/s-fatgen.ads, libgnat/s-fatlfl.ads: Likewise.
	* libgnat/s-fatllf.ads, libgnat/s-ficobl.ads: Likewise.
	* libgnat/s-filatt.ads, libgnat/s-fileio.adb: Likewise.
	* libgnat/s-fileio.ads, libgnat/s-finmas.adb: Likewise.
	* libgnat/s-finmas.ads, libgnat/s-finroo.adb: Likewise.
	* libgnat/s-finroo.ads, libgnat/s-flocon.adb: Likewise.
	* libgnat/s-flocon.ads, libgnat/s-flocon__none.adb: Likewise.
	* libgnat/s-fode128.ads, libgnat/s-fode32.ads: Likewise.
	* libgnat/s-fode64.ads, libgnat/s-fofi128.ads: Likewise.
	* libgnat/s-fofi32.ads, libgnat/s-fofi64.ads: Likewise.
	* libgnat/s-fore_d.adb, libgnat/s-fore_d.ads: Likewise.
	* libgnat/s-fore_f.adb, libgnat/s-fore_f.ads: Likewise.
	* libgnat/s-forrea.adb, libgnat/s-forrea.ads: Likewise.
	* libgnat/s-gearop.adb, libgnat/s-gearop.ads: Likewise.
	* libgnat/s-genbig.adb, libgnat/s-genbig.ads: Likewise.
	* libgnat/s-geveop.adb, libgnat/s-geveop.ads: Likewise.
	* libgnat/s-gloloc.adb, libgnat/s-gloloc.ads: Likewise.
	* libgnat/s-gloloc__mingw.adb, libgnat/s-htable.adb: Likewise.
	* libgnat/s-htable.ads, libgnat/s-imageb.adb: Likewise.
	* libgnat/s-imageb.ads, libgnat/s-imaged.adb: Likewise.
	* libgnat/s-imaged.ads, libgnat/s-imagef.adb: Likewise.
	* libgnat/s-imagef.ads, libgnat/s-imagei.adb: Likewise.
	* libgnat/s-imagei.ads, libgnat/s-imagen.adb: Likewise.
	* libgnat/s-imagen.ads, libgnat/s-imager.adb: Likewise.
	* libgnat/s-imager.ads, libgnat/s-imageu.adb: Likewise.
	* libgnat/s-imageu.ads, libgnat/s-imagew.adb: Likewise.
	* libgnat/s-imagew.ads, libgnat/s-imde128.ads: Likewise.
	* libgnat/s-imde32.ads, libgnat/s-imde64.ads: Likewise.
	* libgnat/s-imen16.ads, libgnat/s-imen32.ads: Likewise.
	* libgnat/s-imenu8.ads, libgnat/s-imfi128.ads: Likewise.
	* libgnat/s-imfi32.ads, libgnat/s-imfi64.ads: Likewise.
	* libgnat/s-imgbiu.adb, libgnat/s-imgbiu.ads: Likewise.
	* libgnat/s-imgboo.adb, libgnat/s-imgboo.ads: Likewise.
	* libgnat/s-imgcha.adb, libgnat/s-imgcha.ads: Likewise.
	* libgnat/s-imgflt.ads, libgnat/s-imgint.adb: Likewise.
	* libgnat/s-imgint.ads, libgnat/s-imglfl.ads: Likewise.
	* libgnat/s-imgllb.adb, libgnat/s-imgllb.ads: Likewise.
	* libgnat/s-imgllf.ads, libgnat/s-imglli.adb: Likewise.
	* libgnat/s-imglli.ads, libgnat/s-imglllb.ads: Likewise.
	* libgnat/s-imgllli.ads, libgnat/s-imglllu.ads: Likewise.
	* libgnat/s-imglllw.ads, libgnat/s-imgllu.adb: Likewise.
	* libgnat/s-imgllu.ads, libgnat/s-imgllw.adb: Likewise.
	* libgnat/s-imgllw.ads, libgnat/s-imgrea.adb: Likewise.
	* libgnat/s-imgrea.ads, libgnat/s-imguns.adb: Likewise.
	* libgnat/s-imguns.ads, libgnat/s-imguti.adb: Likewise.
	* libgnat/s-imguti.ads, libgnat/s-imgwch.adb: Likewise.
	* libgnat/s-imgwch.ads, libgnat/s-imgwiu.adb: Likewise.
	* libgnat/s-imgwiu.ads, libgnat/s-io.adb, libgnat/s-io.ads: Likewise.
	* libgnat/s-llflex.ads, libgnat/s-maccod.ads: Likewise.
	* libgnat/s-mantis.adb, libgnat/s-mantis.ads: Likewise.
	* libgnat/s-mastop.adb, libgnat/s-mastop.ads: Likewise.
	* libgnat/s-memcop.ads, libgnat/s-memory.adb: Likewise.
	* libgnat/s-memory.ads, libgnat/s-mmap.adb, libgnat/s-mmap.ads: Likewise.
	* libgnat/s-mmauni__long.ads, libgnat/s-mmosin__mingw.adb: Likewise.
	* libgnat/s-mmosin__mingw.ads, libgnat/s-mmosin__unix.adb: Likewise.
	* libgnat/s-mmosin__unix.ads, libgnat/s-multip.adb: Likewise.
	* libgnat/s-objrea.adb, libgnat/s-objrea.ads: Likewise.
	* libgnat/s-optide.adb, libgnat/s-os_lib.adb: Likewise.
	* libgnat/s-os_lib.ads, libgnat/s-osprim.ads: Likewise.
	* libgnat/s-osprim__darwin.adb, libgnat/s-osprim__lynxos.ads: Likewise.
	* libgnat/s-osprim__mingw.adb, libgnat/s-osprim__posix.adb: Likewise.
	* libgnat/s-osprim__posix2008.adb, libgnat/s-osprim__rtems.adb: Likewise.
	* libgnat/s-osprim__solaris.adb, libgnat/s-osprim__unix.adb: Likewise.
	* libgnat/s-osprim__x32.adb, libgnat/s-pack03.adb: Likewise.
	* libgnat/s-pack03.ads, libgnat/s-pack05.adb: Likewise.
	* libgnat/s-pack05.ads, libgnat/s-pack06.adb: Likewise.
	* libgnat/s-pack06.ads, libgnat/s-pack07.adb: Likewise.
	* libgnat/s-pack07.ads, libgnat/s-pack09.adb: Likewise.
	* libgnat/s-pack09.ads, libgnat/s-pack10.adb: Likewise.
	* libgnat/s-pack10.ads, libgnat/s-pack100.adb: Likewise.
	* libgnat/s-pack100.ads, libgnat/s-pack101.adb: Likewise.
	* libgnat/s-pack101.ads, libgnat/s-pack102.adb: Likewise.
	* libgnat/s-pack102.ads, libgnat/s-pack103.adb: Likewise.
	* libgnat/s-pack103.ads, libgnat/s-pack104.adb: Likewise.
	* libgnat/s-pack104.ads, libgnat/s-pack105.adb: Likewise.
	* libgnat/s-pack105.ads, libgnat/s-pack106.adb: Likewise.
	* libgnat/s-pack106.ads, libgnat/s-pack107.adb: Likewise.
	* libgnat/s-pack107.ads, libgnat/s-pack108.adb: Likewise.
	* libgnat/s-pack108.ads, libgnat/s-pack109.adb: Likewise.
	* libgnat/s-pack109.ads, libgnat/s-pack11.adb: Likewise.
	* libgnat/s-pack11.ads, libgnat/s-pack110.adb: Likewise.
	* libgnat/s-pack110.ads, libgnat/s-pack111.adb: Likewise.
	* libgnat/s-pack111.ads, libgnat/s-pack112.adb: Likewise.
	* libgnat/s-pack112.ads, libgnat/s-pack113.adb: Likewise.
	* libgnat/s-pack113.ads, libgnat/s-pack114.adb: Likewise.
	* libgnat/s-pack114.ads, libgnat/s-pack115.adb: Likewise.
	* libgnat/s-pack115.ads, libgnat/s-pack116.adb: Likewise.
	* libgnat/s-pack116.ads, libgnat/s-pack117.adb: Likewise.
	* libgnat/s-pack117.ads, libgnat/s-pack118.adb: Likewise.
	* libgnat/s-pack118.ads, libgnat/s-pack119.adb: Likewise.
	* libgnat/s-pack119.ads, libgnat/s-pack12.adb: Likewise.
	* libgnat/s-pack12.ads, libgnat/s-pack120.adb: Likewise.
	* libgnat/s-pack120.ads, libgnat/s-pack121.adb: Likewise.
	* libgnat/s-pack121.ads, libgnat/s-pack122.adb: Likewise.
	* libgnat/s-pack122.ads, libgnat/s-pack123.adb: Likewise.
	* libgnat/s-pack123.ads, libgnat/s-pack124.adb: Likewise.
	* libgnat/s-pack124.ads, libgnat/s-pack125.adb: Likewise.
	* libgnat/s-pack125.ads, libgnat/s-pack126.adb: Likewise.
	* libgnat/s-pack126.ads, libgnat/s-pack127.adb: Likewise.
	* libgnat/s-pack127.ads, libgnat/s-pack13.adb: Likewise.
	* libgnat/s-pack13.ads, libgnat/s-pack14.adb: Likewise.
	* libgnat/s-pack14.ads, libgnat/s-pack15.adb: Likewise.
	* libgnat/s-pack15.ads, libgnat/s-pack17.adb: Likewise.
	* libgnat/s-pack17.ads, libgnat/s-pack18.adb: Likewise.
	* libgnat/s-pack18.ads, libgnat/s-pack19.adb: Likewise.
	* libgnat/s-pack19.ads, libgnat/s-pack20.adb: Likewise.
	* libgnat/s-pack20.ads, libgnat/s-pack21.adb: Likewise.
	* libgnat/s-pack21.ads, libgnat/s-pack22.adb: Likewise.
	* libgnat/s-pack22.ads, libgnat/s-pack23.adb: Likewise.
	* libgnat/s-pack23.ads, libgnat/s-pack24.adb: Likewise.
	* libgnat/s-pack24.ads, libgnat/s-pack25.adb: Likewise.
	* libgnat/s-pack25.ads, libgnat/s-pack26.adb: Likewise.
	* libgnat/s-pack26.ads, libgnat/s-pack27.adb: Likewise.
	* libgnat/s-pack27.ads, libgnat/s-pack28.adb: Likewise.
	* libgnat/s-pack28.ads, libgnat/s-pack29.adb: Likewise.
	* libgnat/s-pack29.ads, libgnat/s-pack30.adb: Likewise.
	* libgnat/s-pack30.ads, libgnat/s-pack31.adb: Likewise.
	* libgnat/s-pack31.ads, libgnat/s-pack33.adb: Likewise.
	* libgnat/s-pack33.ads, libgnat/s-pack34.adb: Likewise.
	* libgnat/s-pack34.ads, libgnat/s-pack35.adb: Likewise.
	* libgnat/s-pack35.ads, libgnat/s-pack36.adb: Likewise.
	* libgnat/s-pack36.ads, libgnat/s-pack37.adb: Likewise.
	* libgnat/s-pack37.ads, libgnat/s-pack38.adb: Likewise.
	* libgnat/s-pack38.ads, libgnat/s-pack39.adb: Likewise.
	* libgnat/s-pack39.ads, libgnat/s-pack40.adb: Likewise.
	* libgnat/s-pack40.ads, libgnat/s-pack41.adb: Likewise.
	* libgnat/s-pack41.ads, libgnat/s-pack42.adb: Likewise.
	* libgnat/s-pack42.ads, libgnat/s-pack43.adb: Likewise.
	* libgnat/s-pack43.ads, libgnat/s-pack44.adb: Likewise.
	* libgnat/s-pack44.ads, libgnat/s-pack45.adb: Likewise.
	* libgnat/s-pack45.ads, libgnat/s-pack46.adb: Likewise.
	* libgnat/s-pack46.ads, libgnat/s-pack47.adb: Likewise.
	* libgnat/s-pack47.ads, libgnat/s-pack48.adb: Likewise.
	* libgnat/s-pack48.ads, libgnat/s-pack49.adb: Likewise.
	* libgnat/s-pack49.ads, libgnat/s-pack50.adb: Likewise.
	* libgnat/s-pack50.ads, libgnat/s-pack51.adb: Likewise.
	* libgnat/s-pack51.ads, libgnat/s-pack52.adb: Likewise.
	* libgnat/s-pack52.ads, libgnat/s-pack53.adb: Likewise.
	* libgnat/s-pack53.ads, libgnat/s-pack54.adb: Likewise.
	* libgnat/s-pack54.ads, libgnat/s-pack55.adb: Likewise.
	* libgnat/s-pack55.ads, libgnat/s-pack56.adb: Likewise.
	* libgnat/s-pack56.ads, libgnat/s-pack57.adb: Likewise.
	* libgnat/s-pack57.ads, libgnat/s-pack58.adb: Likewise.
	* libgnat/s-pack58.ads, libgnat/s-pack59.adb: Likewise.
	* libgnat/s-pack59.ads, libgnat/s-pack60.adb: Likewise.
	* libgnat/s-pack60.ads, libgnat/s-pack61.adb: Likewise.
	* libgnat/s-pack61.ads, libgnat/s-pack62.adb: Likewise.
	* libgnat/s-pack62.ads, libgnat/s-pack63.adb: Likewise.
	* libgnat/s-pack63.ads, libgnat/s-pack65.adb: Likewise.
	* libgnat/s-pack65.ads, libgnat/s-pack66.adb: Likewise.
	* libgnat/s-pack66.ads, libgnat/s-pack67.adb: Likewise.
	* libgnat/s-pack67.ads, libgnat/s-pack68.adb: Likewise.
	* libgnat/s-pack68.ads, libgnat/s-pack69.adb: Likewise.
	* libgnat/s-pack69.ads, libgnat/s-pack70.adb: Likewise.
	* libgnat/s-pack70.ads, libgnat/s-pack71.adb: Likewise.
	* libgnat/s-pack71.ads, libgnat/s-pack72.adb: Likewise.
	* libgnat/s-pack72.ads, libgnat/s-pack73.adb: Likewise.
	* libgnat/s-pack73.ads, libgnat/s-pack74.adb: Likewise.
	* libgnat/s-pack74.ads, libgnat/s-pack75.adb: Likewise.
	* libgnat/s-pack75.ads, libgnat/s-pack76.adb: Likewise.
	* libgnat/s-pack76.ads, libgnat/s-pack77.adb: Likewise.
	* libgnat/s-pack77.ads, libgnat/s-pack78.adb: Likewise.
	* libgnat/s-pack78.ads, libgnat/s-pack79.adb: Likewise.
	* libgnat/s-pack79.ads, libgnat/s-pack80.adb: Likewise.
	* libgnat/s-pack80.ads, libgnat/s-pack81.adb: Likewise.
	* libgnat/s-pack81.ads, libgnat/s-pack82.adb: Likewise.
	* libgnat/s-pack82.ads, libgnat/s-pack83.adb: Likewise.
	* libgnat/s-pack83.ads, libgnat/s-pack84.adb: Likewise.
	* libgnat/s-pack84.ads, libgnat/s-pack85.adb: Likewise.
	* libgnat/s-pack85.ads, libgnat/s-pack86.adb: Likewise.
	* libgnat/s-pack86.ads, libgnat/s-pack87.adb: Likewise.
	* libgnat/s-pack87.ads, libgnat/s-pack88.adb: Likewise.
	* libgnat/s-pack88.ads, libgnat/s-pack89.adb: Likewise.
	* libgnat/s-pack89.ads, libgnat/s-pack90.adb: Likewise.
	* libgnat/s-pack90.ads, libgnat/s-pack91.adb: Likewise.
	* libgnat/s-pack91.ads, libgnat/s-pack92.adb: Likewise.
	* libgnat/s-pack92.ads, libgnat/s-pack93.adb: Likewise.
	* libgnat/s-pack93.ads, libgnat/s-pack94.adb: Likewise.
	* libgnat/s-pack94.ads, libgnat/s-pack95.adb: Likewise.
	* libgnat/s-pack95.ads, libgnat/s-pack96.adb: Likewise.
	* libgnat/s-pack96.ads, libgnat/s-pack97.adb: Likewise.
	* libgnat/s-pack97.ads, libgnat/s-pack98.adb: Likewise.
	* libgnat/s-pack98.ads, libgnat/s-pack99.adb: Likewise.
	* libgnat/s-pack99.ads, libgnat/s-parame.adb: Likewise.
	* libgnat/s-parame.ads, libgnat/s-parame__hpux.ads: Likewise.
	* libgnat/s-parame__posix2008.ads, libgnat/s-parame__rtems.adb: Likewise.
	* libgnat/s-parame__vxworks.adb, libgnat/s-parame__vxworks.ads: Likewise.
	* libgnat/s-parint.adb, libgnat/s-parint.ads: Likewise.
	* libgnat/s-pehage.adb, libgnat/s-pehage.ads: Likewise.
	* libgnat/s-pooglo.adb, libgnat/s-pooglo.ads: Likewise.
	* libgnat/s-pooloc.adb, libgnat/s-pooloc.ads: Likewise.
	* libgnat/s-poosiz.adb, libgnat/s-poosiz.ads: Likewise.
	* libgnat/s-powflt.ads, libgnat/s-powlfl.ads: Likewise.
	* libgnat/s-powllf.ads, libgnat/s-purexc.ads: Likewise.
	* libgnat/s-putima.adb, libgnat/s-putima.ads: Likewise.
	* libgnat/s-rannum.adb, libgnat/s-rannum.ads: Likewise.
	* libgnat/s-ransee.adb, libgnat/s-ransee.ads: Likewise.
	* libgnat/s-regexp.adb, libgnat/s-regexp.ads: Likewise.
	* libgnat/s-regpat.adb, libgnat/s-regpat.ads: Likewise.
	* libgnat/s-resfil.adb, libgnat/s-resfil.ads: Likewise.
	* libgnat/s-restri.adb, libgnat/s-restri.ads: Likewise.
	* libgnat/s-retsta.ads, libgnat/s-rident.ads, libgnat/s-rpc.adb: Likewise.
	* libgnat/s-rpc.ads, libgnat/s-scaval.adb, libgnat/s-scaval.ads: Likewise.
	* libgnat/s-scaval__128.adb, libgnat/s-scaval__128.ads: Likewise.
	* libgnat/s-secsta.adb, libgnat/s-secsta.ads: Likewise.
	* libgnat/s-sequio.adb, libgnat/s-sequio.ads: Likewise.
	* libgnat/s-shabig.ads, libgnat/s-shasto.adb: Likewise.
	* libgnat/s-shasto.ads, libgnat/s-soflin.adb: Likewise.
	* libgnat/s-soflin.ads, libgnat/s-soliin.adb: Likewise.
	* libgnat/s-soliin.ads, libgnat/s-spark.ads, libgnat/s-spcuop.adb: Likewise.
	* libgnat/s-spcuop.ads, libgnat/s-spsufi.adb: Likewise.
	* libgnat/s-spsufi.ads, libgnat/s-stache.adb: Likewise.
	* libgnat/s-stache.ads, libgnat/s-stalib.adb: Likewise.
	* libgnat/s-stalib.ads, libgnat/s-statxd.adb: Likewise.
	* libgnat/s-statxd.ads, libgnat/s-stausa.adb: Likewise.
	* libgnat/s-stausa.ads, libgnat/s-stchop.adb: Likewise.
	* libgnat/s-stchop.ads, libgnat/s-stchop__limit.ads: Likewise.
	* libgnat/s-stchop__vxworks.adb, libgnat/s-stoele.adb: Likewise.
	* libgnat/s-stoele.ads, libgnat/s-stopoo.adb: Likewise.
	* libgnat/s-stopoo.ads, libgnat/s-stposu.adb: Likewise.
	* libgnat/s-stposu.ads, libgnat/s-stratt.adb: Likewise.
	* libgnat/s-stratt.ads, libgnat/s-strcom.adb: Likewise.
	* libgnat/s-strcom.ads, libgnat/s-strhas.adb: Likewise.
	* libgnat/s-strhas.ads, libgnat/s-string.adb: Likewise.
	* libgnat/s-string.ads, libgnat/s-ststop.adb: Likewise.
	* libgnat/s-ststop.ads, libgnat/s-tasloc.adb: Likewise.
	* libgnat/s-tasloc.ads, libgnat/s-traceb.adb: Likewise.
	* libgnat/s-traceb.ads, libgnat/s-traceb__hpux.adb: Likewise.
	* libgnat/s-traceb__mastop.adb, libgnat/s-traent.adb: Likewise.
	* libgnat/s-traent.ads, libgnat/s-trasym.adb: Likewise.
	* libgnat/s-trasym.ads, libgnat/s-trasym__dwarf.adb: Likewise.
	* libgnat/s-tsmona.adb, libgnat/s-tsmona__linux.adb: Likewise.
	* libgnat/s-tsmona__mingw.adb, libgnat/s-unstyp.ads: Likewise.
	* libgnat/s-utf_32.adb, libgnat/s-utf_32.ads: Likewise.
	* libgnat/s-vade128.ads, libgnat/s-vade32.ads: Likewise.
	* libgnat/s-vade64.ads, libgnat/s-vaen16.ads: Likewise.
	* libgnat/s-vaen32.ads, libgnat/s-vaenu8.ads: Likewise.
	* libgnat/s-vafi128.ads, libgnat/s-vafi32.ads: Likewise.
	* libgnat/s-vafi64.ads, libgnat/s-vaispe.adb: Likewise.
	* libgnat/s-vaispe.ads, libgnat/s-valboo.adb: Likewise.
	* libgnat/s-valboo.ads, libgnat/s-valcha.adb: Likewise.
	* libgnat/s-valcha.ads, libgnat/s-valflt.ads: Likewise.
	* libgnat/s-valint.adb, libgnat/s-valint.ads: Likewise.
	* libgnat/s-vallfl.ads, libgnat/s-valllf.ads: Likewise.
	* libgnat/s-vallli.adb, libgnat/s-vallli.ads: Likewise.
	* libgnat/s-valllli.ads, libgnat/s-vallllu.ads: Likewise.
	* libgnat/s-valllu.adb, libgnat/s-valllu.ads: Likewise.
	* libgnat/s-valrea.adb, libgnat/s-valrea.ads: Likewise.
	* libgnat/s-valued.adb, libgnat/s-valued.ads: Likewise.
	* libgnat/s-valuef.adb, libgnat/s-valuef.ads: Likewise.
	* libgnat/s-valuei.adb, libgnat/s-valuei.ads: Likewise.
	* libgnat/s-valuen.adb, libgnat/s-valuen.ads: Likewise.
	* libgnat/s-valuer.adb, libgnat/s-valuer.ads: Likewise.
	* libgnat/s-valueu.adb, libgnat/s-valueu.ads: Likewise.
	* libgnat/s-valuns.adb, libgnat/s-valuns.ads: Likewise.
	* libgnat/s-valuti.adb, libgnat/s-valuti.ads: Likewise.
	* libgnat/s-valwch.adb, libgnat/s-valwch.ads: Likewise.
	* libgnat/s-vauspe.adb, libgnat/s-vauspe.ads: Likewise.
	* libgnat/s-veboop.adb, libgnat/s-veboop.ads: Likewise.
	* libgnat/s-vector.ads, libgnat/s-vercon.adb: Likewise.
	* libgnat/s-vercon.ads, libgnat/s-wchcnv.adb: Likewise.
	* libgnat/s-wchcnv.ads, libgnat/s-wchcon.adb: Likewise.
	* libgnat/s-wchcon.ads, libgnat/s-wchjis.adb: Likewise.
	* libgnat/s-wchjis.ads, libgnat/s-wchstw.adb: Likewise.
	* libgnat/s-wchstw.ads, libgnat/s-wchwts.adb: Likewise.
	* libgnat/s-wchwts.ads, libgnat/s-widboo.adb: Likewise.
	* libgnat/s-widboo.ads, libgnat/s-widcha.adb: Likewise.
	* libgnat/s-widcha.ads, libgnat/s-widenu.adb: Likewise.
	* libgnat/s-widenu.ads, libgnat/s-widint.ads: Likewise.
	* libgnat/s-widlli.adb, libgnat/s-widlli.ads: Likewise.
	* libgnat/s-widllli.ads, libgnat/s-widlllu.ads: Likewise.
	* libgnat/s-widllu.adb, libgnat/s-widllu.ads: Likewise.
	* libgnat/s-widthi.adb, libgnat/s-widthi.ads: Likewise.
	* libgnat/s-widthu.adb, libgnat/s-widthu.ads: Likewise.
	* libgnat/s-widuns.ads, libgnat/s-widwch.adb: Likewise.
	* libgnat/s-widwch.ads, libgnat/s-win32.ads, libgnat/s-winext.ads: Likewise.
	* libgnat/s-wwdcha.adb, libgnat/s-wwdcha.ads: Likewise.
	* libgnat/s-wwdenu.adb, libgnat/s-wwdenu.ads: Likewise.
	* libgnat/s-wwdwch.adb, libgnat/s-wwdwch.ads: Likewise.
	* libgnat/system-aix.ads, libgnat/system-darwin-arm.ads: Likewise.
	* libgnat/system-darwin-ppc.ads, libgnat/system-darwin-x86.ads: Likewise.
	* libgnat/system-djgpp.ads, libgnat/system-dragonfly-x86_64.ads: Likewise.
	* libgnat/system-freebsd.ads, libgnat/system-hpux-ia64.ads: Likewise.
	* libgnat/system-hpux.ads, libgnat/system-linux-alpha.ads: Likewise.
	* libgnat/system-linux-arm.ads, libgnat/system-linux-hppa.ads: Likewise.
	* libgnat/system-linux-ia64.ads, libgnat/system-linux-m68k.ads: Likewise.
	* libgnat/system-linux-mips.ads, libgnat/system-linux-ppc.ads: Likewise.
	* libgnat/system-linux-riscv.ads, libgnat/system-linux-s390.ads: Likewise.
	* libgnat/system-linux-sh4.ads, libgnat/system-linux-sparc.ads: Likewise.
	* libgnat/system-linux-x86.ads, libgnat/system-lynxos178-ppc.ads: Likewise.
	* libgnat/system-lynxos178-x86.ads, libgnat/system-mingw.ads: Likewise.
	* libgnat/system-qnx-arm.ads, libgnat/system-rtems.ads: Likewise.
	* libgnat/system-solaris-sparc.ads: Likewise.
	* libgnat/system-solaris-x86.ads: Likewise.
	* libgnat/system-vxworks-ppc-kernel.ads: Likewise.
	* libgnat/system-vxworks-ppc-rtp-smp.ads: Likewise.
	* libgnat/system-vxworks-ppc-rtp.ads: Likewise.
	* libgnat/system-vxworks7-aarch64-rtp-smp.ads: Likewise.
	* libgnat/system-vxworks7-aarch64.ads: Likewise.
	* libgnat/system-vxworks7-arm-rtp-smp.ads: Likewise.
	* libgnat/system-vxworks7-arm.ads: Likewise.
	* libgnat/system-vxworks7-ppc-kernel.ads: Likewise.
	* libgnat/system-vxworks7-ppc-rtp-smp.ads: Likewise.
	* libgnat/system-vxworks7-ppc64-kernel.ads: Likewise.
	* libgnat/system-vxworks7-ppc64-rtp-smp.ads: Likewise.
	* libgnat/system-vxworks7-x86-kernel.ads: Likewise.
	* libgnat/system-vxworks7-x86-rtp-smp.ads: Likewise.
	* libgnat/system-vxworks7-x86_64-kernel.ads: Likewise.
	* libgnat/system-vxworks7-x86_64-rtp-smp.ads, link.c, live.adb: Likewise.
	* live.ads, locales.c, make.adb, make.ads, make_util.adb: Likewise.
	* make_util.ads, makeusg.adb, makeusg.ads, mdll-fil.adb: Likewise.
	* mdll-fil.ads, mdll-utl.adb, mdll-utl.ads, mdll.adb, mdll.ads: Likewise.
	* mingw32.h, mkdir.c, namet-sp.adb, namet-sp.ads, namet.adb: Likewise.
	* namet.ads, namet.h, nlists.adb, nlists.ads, nlists.h, opt.adb: Likewise.
	* opt.ads, osint-b.adb, osint-b.ads, osint-c.adb, osint-c.ads: Likewise.
	* osint-l.adb, osint-l.ads, osint-m.adb, osint-m.ads, osint.adb: Likewise.
	* osint.ads, output.adb, output.ads, par-ch10.adb, par-ch11.adb: Likewise.
	* par-ch12.adb, par-ch13.adb, par-ch2.adb, par-ch3.adb: Likewise.
	* par-ch4.adb, par-ch5.adb, par-ch6.adb, par-ch7.adb, par-ch8.adb: Likewise.
	* par-ch9.adb, par-endh.adb, par-labl.adb, par-load.adb: Likewise.
	* par-prag.adb, par-sync.adb, par-tchk.adb, par-util.adb, par.adb: Likewise.
	* par.ads, par_sco.adb, par_sco.ads: Likewise.
	* pprint.adb, pprint.ads, prep.adb, prep.ads: Likewise.
	* prepcomp.adb, prepcomp.ads, put_scos.adb, put_scos.ads: Likewise.
	* raise-gcc.c, raise.c, raise.h, repinfo-input.adb: Likewise.
	* repinfo-input.ads, repinfo.adb, repinfo.ads, repinfo.h: Likewise.
	* restrict.adb, restrict.ads, rident.ads, rtfinal.c, rtinit.c: Likewise.
	* rtsfind.adb, rtsfind.ads, runtime.h, s-oscons-tmplt.c: Likewise.
	* scans.adb, scans.ads, scil_ll.adb, scil_ll.ads, scn.adb: Likewise.
	* scn.ads, scng.adb, scng.ads, scos.adb, scos.ads: Likewise.
	* scos.h, sdefault.ads, seh_init.c, sem.adb, sem.ads: Likewise.
	* sem_aggr.adb, sem_aggr.ads, sem_attr.adb, sem_attr.ads: Likewise.
	* sem_aux.adb, sem_aux.ads, sem_case.adb, sem_case.ads: Likewise.
	* sem_cat.adb, sem_cat.ads, sem_ch10.adb, sem_ch10.ads: Likewise.
	* sem_ch11.adb, sem_ch11.ads, sem_ch12.adb, sem_ch12.ads: Likewise.
	* sem_ch13.adb, sem_ch13.ads, sem_ch2.adb, sem_ch2.ads: Likewise.
	* sem_ch3.adb, sem_ch3.ads, sem_ch4.adb, sem_ch4.ads, sem_ch5.adb: Likewise.
	* sem_ch5.ads, sem_ch6.adb, sem_ch6.ads, sem_ch7.adb, sem_ch7.ads: Likewise.
	* sem_ch8.adb, sem_ch8.ads, sem_ch9.adb, sem_ch9.ads, sem_dim.adb: Likewise.
	* sem_dim.ads, sem_disp.adb, sem_disp.ads, sem_dist.adb: Likewise.
	* sem_dist.ads, sem_elab.adb, sem_elab.ads, sem_elim.adb: Likewise.
	* sem_elim.ads, sem_eval.adb, sem_eval.ads, sem_intr.adb: Likewise.
	* sem_intr.ads, sem_mech.adb, sem_mech.ads, sem_prag.adb: Likewise.
	* sem_prag.ads, sem_res.adb, sem_res.ads, sem_scil.adb: Likewise.
	* sem_scil.ads, sem_smem.adb, sem_smem.ads, sem_type.adb: Likewise.
	* sem_type.ads, sem_util.adb, sem_util.ads, sem_warn.adb: Likewise.
	* sem_warn.ads, set_targ.adb, set_targ.ads, sfn_scan.adb: Likewise.
	* sfn_scan.ads, sigtramp-arm-qnx.c, sigtramp-armdroid.c: Likewise.
	* sigtramp-ios.c, sigtramp-qnx.c: Likewise.
	* sigtramp-vxworks-target.h, sigtramp-vxworks.c, sigtramp.h: Likewise.
	* sinfo-cn.adb, sinfo-cn.ads, sinfo-utils.adb, sinfo-utils.ads: Likewise.
	* sinfo.adb, sinfo.ads, sinput-c.adb, sinput-c.ads, sinput-d.adb: Likewise.
	* sinput-d.ads, sinput-l.adb, sinput-l.ads, sinput.adb: Likewise.
	* sinput.ads, socket.c, spark_xrefs.adb, spark_xrefs.ads: Likewise.
	* sprint.adb, sprint.ads, stand.ads: Likewise.
	* stringt.adb, stringt.ads, stringt.h, strub.adb, strub.ads: Likewise.
	* style.adb, style.ads, styleg.adb, styleg.ads, stylesw.adb: Likewise.
	* stylesw.ads, switch-b.adb, switch-b.ads, switch-c.adb: Likewise.
	* switch-c.ads, switch-m.adb, switch-m.ads, switch.adb: Likewise.
	* switch.ads, sysdep.c, table.adb: Likewise.
	* table.ads, targext.c, targparm.adb, targparm.ads, tbuild.adb: Likewise.
	* tbuild.ads, tempdir.adb, tempdir.ads, terminals.c, tracebak.c: Likewise.
	* treepr.adb, treepr.ads, ttypes.ads, types.adb, types.ads: Likewise.
	* types.h, uintp.adb, uintp.ads, uintp.h, uname.adb, uname.ads: Likewise.
	* urealp.adb, urealp.ads, urealp.h, usage.adb, usage.ads: Likewise.
	* validsw.adb, validsw.ads, vast.adb, vast.ads, warnsw.adb: Likewise.
	* warnsw.ads, widechar.adb, widechar.ads, xoscons.adb: Likewise.
	* xsnamest.adb, xutil.adb, xutil.ads, gnatvsn.adb: Likewise.
	* gnatvsn.ads (Current_Year): Likewise and bump to 2023.

2023-01-09  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch7.adb (Make_Adjust_Call): Remove unreachable statement.
	(Make_Final_Call): Likewise.

2023-01-09  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.ads (Is_Tag_To_Class_Wide_Conversion): Delete.
	(Is_Displacement_Of_Object_Or_Function_Result): Likewise.
	* exp_util.adb (Is_Tag_To_Class_Wide_Conversion): Rename to...
	(Is_Temporary_For_Interface_Object): ...this.
	(Is_Finalizable_Transient): Adjust call to above renaming.
	(Is_Displacement_Of_Object_Or_Function_Result): Delete.
	(Requires_Cleanup_Actions): Remove special handling of the
	temporaries created for interface objects.
	* exp_ch7.adb (Build_Finalizer): Likewise.

2023-01-07  LIU Hao  <lh_mouse@126.com>

	PR middle-end/108300
	* adaint.c: Define `WIN32_LEAN_AND_MEAN` before `#include
	<windows.h>`.
	* cio.c: Likewise.
	* ctrl_c.c: Likewise.
	* expect.c: Likewise.
	* gsocket.h: Likewise.
	* mingw32.h: Likewise.
	* mkdir.c: Likewise.
	* rtfinal.c: Likewise.
	* rtinit.c: Likewise.
	* seh_init.c: Likewise.
	* sysdep.c: Likewise.
	* terminals.c: Likewise.
	* tracebak.c: Likewise.

2023-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.adb (Make_CW_Equivalent_Type) <Has_Tag_Of_Type>: Tweak.

2023-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): Rewrite the end of the
	handling of objects with (class-wide) interface type by using the
	same idiom as the other cases generating a renaming.
	* exp_util.adb (Is_Displacement_Of_Object_Or_Function_Result): Tweak
	pattern matching code and exclude special return objects.
	(Requires_Cleanup_Actions): Adjust comment.
	* exp_ch7.adb (Build_Finalizer): Likewise.

2023-01-05  Piotr Trojanek  <trojanek@adacore.com>

	* freeze.adb (Build_Renamed_Body): Rewrite subprogram renaming to
	subprogram declaration early and then set the Body_To_Inling flag.

2023-01-05  Piotr Trojanek  <trojanek@adacore.com>

	* freeze.adb (Build_Renamed_Body): Revert a special case for
	GNATprove; remove unnecessary initialization of a local variable.

2023-01-05  Marc Poulhiès  <poulhies@adacore.com>

	* sem_ch12.adb (Instantiate_Package_Body): Better filtering when
	installing parent on the scope stack.

2023-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	* repinfo.ads (The JSON output format): Document change.
	* urealp.adb (UR_Write_To_JSON): Output a fraction instead of a
	decimal approximation.

2023-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): New local variable
	Func_Id holding the function for a special return object.
	Use a direct renaming in the class-wide case when the initializing
	expression is a captured function call, except for a special return
	object when the two functions do not return on the same stack.
	Apply the accessibility check for class-wide special return objects.
	* exp_util.adb (Make_CW_Equivalent_Type) <Has_Tag_Of_Type>: New.
	Do not force a dispatching call to the primitive operation _Size if
	the expression is known to statically have the tag of its type.

2023-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): Fix pasto in comment.

2023-01-05  Ronan Desplanques  <desplanques@adacore.com>

	* sem_aggr.adb (Resolve_Array_Aggregate): Tweak conditions for
	warning about use of parentheses for array aggregates.

2023-01-05  Javier Miranda  <miranda@adacore.com>

	* scans.ads (Tok_Left_Curly_Bracket, Tok_Right_Curly_Bracket)
	(Tok_Left_Interpolated_String): Placed in no category since they
	don't fit well in the existing categories. Fix typo in comment.
	(Inside_Interpolated_String_Literal): New scan state variable.
	* scng.adb (Slit): Scan interpolated string literals,
	continuations of interpolated string literals and escaped
	characters found in interpolated string literals.
	(Scan): Handle consecutive interpolated expressions. Handle ending
	delimiter placed immediately after an interpolated expression.
	Handle string literal placed after interpolated expression. Handle
	left and right curly brackets; when extensions are not allowed
	they are treated as left and right paren; when extensions are
	allowed they are handled as delimiters of interpolated string
	literals.
	* sinfo.ads (N_Interpolated_String_Literal): New node.
	* gen_il-gen-gen_nodes.adb (N_Interpolated_String_Literal): Define
	N_String_Literal node.
	* gen_il-types.ads (Opt_Type_Enum): Define N_String_Literal as
	concrete node type.
	* par-ch2.adb (P_Interpolated_String_Literal): New subprogram.
	* par-ch4.adb (P_Simple_Expression): Handle '}' as expression
	terminator when scanning an interpolated expression; disable error
	recovery machinery for binary operator when we are processing an
	interpolated string literal and reach the expression terminator
	'}'.
	(P_Primary): Call P_Interpolated_String_Literal when the opening
	interpolated-string-literal delimiter is found (that is, the left
	curly bracket '{').
	* par-tchk.adb (T_Right_Curly_Bracket): New subprogram.
	* par.adb (P_Interpolated_String_Literal): New declaration.
	(T_Right_Curly_Bracket): New declaration.
	* sem.adb (Analyze): Call Analyze_Interpolated_String_Literal.
	* sem_ch2.ads (Analyze_Interpolated_String_Literal): New
	subprogram
	* sem_ch2.adb (Analyze_Interpolated_String_Literal): Likewise.
	* sem_util.adb (Is_User_Defined_Literal): Complete mapping of
	literal aspects adding that interpolated string literals have no
	correspondence with any aspect.
	* sem_res.adb (Resolve_Interpolated_String_Literal): New
	subprogram.
	(Has_Applicable_User_Defined_Literal): Complete mapping of literal
	aspects adding that interpolated string literals have no
	correspondency with any aspect.
	* expander.adb (Expand): Add call to
	Expand_N_Interpolated_String_Literal.
	* exp_util.adb (Insert_Actions): Handle
	N_Interpolated_String_Literal nodes; that is, continue climbing.
	* exp_ch2.ads (Expand_N_Interpolated_String_Literal): New
	subprogram.
	* exp_ch2.adb (Expand_N_Interpolated_String_Literal): Likewise.
	* exp_put_image.adb (Build_Elementary_Put_Image_Call): Add missing
	conversion to force dispatching call. Required to handle calls to
	descendants.
	(Build_String_Put_Image_Call): Do not output string delimiters
	when the put_image call is part of an interpolated string literal.
	* rtsfind.ads (RTU_Id): Add RE_Set_Trim_Leading_Spaces.
	* sprint.adb (Sprint_Node): Output interpolated string contents.
	* libgnat/a-stbubo.adb (Get_UTF_8): Add default value for
	Trim_Leading_White_Spaces component in aggregate.
	(Buffer_Type_Implementation): Update Trim_Leading_White_Spaces.
	* libgnat/a-stbuun.adb (Get_UTF_8): Likewise.
	(Buffer_Type_Implementation): Likewise.
	* libgnat/a-sttebu.ads (Set_Trim_Leading_Spaces): New subprogram.
	(Trim_Leading_Spaces): New subprogram.
	(Root_Buffer_Type): Adding Trim_Leading_While_Spaces component.
	* libgnat/a-sttebu.adb (procedure Set_Trim_Leading_Spaces): New
	subprogram.
	(Trim_Leading_Space): New subprogram.
	(Put_UTF_8): Handle Trim_Leading_White_Spaces.
	(New_Line): Likewise.
	* libgnat/s-putima.ads (Put_Image_String): Adding formal
	(with_delimiters).
	(Put_Image_Wide_String): Likewise.
	(Put_Image_Wide_Wide_String): Likewise.
	* libgnat/s-putima.adb (Put_Image_String): Adding support for new
	formal.
	(Put_Image_Wide_String): Likewise.
	(Put_Image_Wide_Wide_String): Likewise.

2023-01-05  Joao Azevedo  <azevedo@adacore.com>

	* doc/gnat_ugn/gnat_utility_programs.rst: add gnatpp --layout
	switch and update legacy switches.

2023-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	* freeze.adb (Freeze_Entity): For the purpose of deciding whether to
	freeze an entity coming from an outer scope in an inner scope, treat
	the internal subprogram generated because of post-conditions as also
	coming from source if the original subprogram itself does.

2023-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	* contracts.adb (Build_Subprogram_Contract_Wrapper): Generate an
	extended return statement in all cases.
	(Expand_Subprogram_Contract): Adjust comment.

2023-01-05  Ronan Desplanques  <desplanques@adacore.com>

	* libgnat/g-forstr.adb (F_Kind): Rename enumeration literal.
	(P_Flt_Format): Adjust handling of "%g".
	(Determine_Notation_And_Aft): New procedure.
	(Decimal_Exponent): New function.
	(Increment_Integral_Part): New procedure.
	(Remove_Extraneous_Decimal_Digit): New procedure.
	(Trim_Fractional_Part): New procedure.
	* libgnat/g-forstr.ads: Change description of "%g" specifier.

2023-01-05  Marc Poulhiès  <poulhies@adacore.com>

	* sem_ch12.adb (Instantiate_Package_Body): Correctly find the
	parent instance to place on the scope stack.

2023-01-05  Justin Squirek  <squirek@adacore.com>

	* sem_ch8.adb (Set_Entity_Or_Discriminal): Verify we are actually
	resetting the entity field of a non-prefixed discriminant
	reference.

2023-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): New local variable used
	throughout instead of testing Is_Special_Return_Object every time.
	Do not rename an OK_To_Rename object for a special return object.
	* exp_ch4.adb (Expand_Concatenate): Revert to constrained allocation
	if the result is allocated on the secondary stack.

2023-01-05  Steve Baird  <baird@adacore.com>

	* sem_prag.adb (Analyze_Pragma): Fix Is_Configuration_Pragma
	function to handle case where the pragma's parent is an
	N_Aspect_Specification node. In analyzing a Discard_Names pragma,
	do not assume that a nonzero number of arguments implies that the
	pragma is not a configuration pragma; that assumption only holds
	for legal programs.

2023-01-05  Bob Duff  <duff@adacore.com>

	* doc/gnat_ugn/building_executable_programs_with_gnat.rst:
	Add RM references.
	* gnat_ugn.texi: Regenerate.

2023-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): For a special return
	object of an interface type that is not inherently limited, make
	a call to the Adjust primitive after doing the copy.  For a special
	return object of a non-class-wide type initialized by a function
	call, use a direct renaming only if the object doing the capture
	is flagged by Is_Related_To_Func_Return.  For a special return
	object using a direct renaming, reassign the tag, if need be.
	* exp_ch6.adb (Expand_Simple_Function_Return): Fix comment.
	* exp_util.adb (Is_Related_To_Func_Return): Accept both regular and
	renaming object declarations for return objects.

2023-01-05  Bob Duff  <duff@adacore.com>

	* sem_ch5.adb (Analyze_Assignment): Fix the bug by checking
	Original_Node. The renaming might be elsewhere, but the (original)
	reference is right here.
	* errout.adb: Remove pragma Unreferenced which was added because
	of the above bug.
	* einfo.ads: Misc cleanup.
	* lib.adb: Likewise.
	* lib.ads: Likewise.

2023-01-03  Ghjuvan Lacambre  <lacambre@adacore.com>

	* errout.adb (Write_JSON_Span): Escape subprogram name.

2023-01-03  Ghjuvan Lacambre  <lacambre@adacore.com>

	* output.adb (Write_Buffer): Use Flush_Buffer instead of Write_Eol.

2023-01-03  Ronan Desplanques  <desplanques@adacore.com>

	* libgnat/g-forstr.adb (P_Flt_Format): Add "*" syntax handling.

2023-01-03  Ronan Desplanques  <desplanques@adacore.com>

	* libgnat/g-forstr.adb (P_Int_Format): Fix parsing bug.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch6.adb (Expand_Simple_Function_Return): Make sure that a
	captured function call also verifies Is_Related_To_Func_Return.
	Do not generate an actual subtype for special return objects.
	* exp_util.ads (Is_Related_To_Func_Return): Add commentary.

2023-01-03  Ronan Desplanques  <desplanques@adacore.com>

	* libgnat/g-forstr.adb
	(Advance_And_Accumulate_Until_Next_Specifier): New procedure.
	("-"): Replace inline code with call to
	Advance_And_Accumulate_Until_Next_Specifier.
	(Next_Format): likewise.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* checks.adb (Apply_Discriminant_Check.Denotes_Explicit_Dereference):
	Return false for artificial dereferences generated by the expander.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch6.adb (Is_Build_In_Place_Function): Adjust comment.
	* sem_util.adb (Compute_Returns_By_Ref): Do not set Returns_By_Ref
	on functions with foreign convention.

2023-01-03  Marc Poulhiès  <poulhies@adacore.com>

	* exp_aggr.adb (Build_Assignment_With_Temporary): New.
	(Expand_Array_Aggregate): Tune backend optimization
	and insert a temporary in the case of an access with
	Designated_Storage_Model aspect.
	(Convert_Array_Aggr_In_Allocator): Likewise.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_res.adb (Resolve_Membership_Op): Adjust again latest change.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_util.ads (Set_Debug_Info_Defining_Id): Adjust comment.
	* sem_util.adb (Is_Aliased_View) <N_Explicit_Dereference>: Return
	false for more artificial dereferences generated by the expander.
	(Set_Debug_Info_Defining_Id): Set Debug_Info_Needed unconditionally
	in -gnatD mode.
	* exp_ch6.adb (Replace_Renaming_Declaration_Id): Also preserve the
	Is_Aliased flag.

2023-01-03  Joel Brobecker  <brobecker@adacore.com>

	* doc/gnat_ugn/platform_specific_information.rst
	(_Platform_Specific_Information): Minor rewording of intro text.
	* gnat_ugn.texi: Regenerate.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.ads (Is_Captured_Function_Call): Declare.
	* exp_util.adb (Is_Captured_Function_Call): New predicate.
	* exp_ch3.adb (Expand_N_Object_Declaration): Use it to detect a
	rewritten function call as the initializing expression.
	* exp_ch6.adb (Expand_Simple_Function_Return): Use it to detect a
	rewritten function call as the returned expression.

2023-01-03  Bob Duff  <duff@adacore.com>

	* exp_util.adb (Integer_Type_For): Assertion and comment.
	(Small_Integer_Type_For): Remove some code and call
	Integer_Type_For instead.
	* sem_util.ads (Rep_To_Pos_Flag): Improve comments. "Standard_..."
	seems overly pedantic here.
	* exp_attr.adb (Succ, Pred): Clean up: make the code as similar as
	possible.
	* exp_ch4.adb: Minor: named notation.

2023-01-03  Javier Miranda  <miranda@adacore.com>

	* ghost.adb (Is_OK_Declaration): A reference to a Ghost entity may
	appear within the class-wide precondition of a helper subprogram.
	This context is treated as suitable because it was already
	verified when we were analyzing the original class-wide
	precondition.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_tss.adb (Base_Init_Proc): Do not return the Init_Proc of the
	ancestor type for a derived array type.
	* sem_ch13.adb (Inherit_Aspects_At_Freeze_Point): Factor out the
	common processing done on representation items.
	For Default_Component_Value and Default_Value, look into the first
	subtype to find out the representation items.

2023-01-02  Iain Sandoe  <iain@sandoe.co.uk>

	PR ada/108202
	* gcc-interface/Make-lang.in (GCC_LINKERFLAGS, GCC_LDFLAGS):
	Versions of ALL_LINKERFLAGS, LDFLAGS with -Werror and
	-static-libgcc filtered out for Darwin8 and 9 (-Werror is filtered
	out for other hosts).

2023-01-02  Jakub Jelinek  <jakub@redhat.com>

	* gnat_ugn.texi: Bump @copying's copyright year.
	* gnat_rm.texi: Likewise.


Copyright (C) 2023 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
