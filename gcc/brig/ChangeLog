2017-10-23  Richard Sandiford  <richard.sandiford@linaro.org>

	* brig-lang.c (brig_langhook_type_for_mode): Use scalar_int_mode
	and scalar_float_mode.

2017-10-09  Pekka Jääskeläinen  <pekka.jaaskelainen@parmance.com>

	* brigfrontend/brig-to-generic.cc: Support BRIG_KIND_NONE
	directives.  These directives are legal everywhere.  They
	can be used to patch away BRIG entries at the binary level.
	Also add extra error detection for zeroed regions: make sure
	the byteCount field is never zero.
	* brig/brigfrontend/phsa.h: Added a new error prefix for
	errors which are due to corrupted BRIG modules.

2017-10-09  Henry Linjamäki  <henry.linjamaki@parmance.com>

	* brigfrontend/brig-branch-inst-handler.cc: The call code
	still failed a few test cases. Now all PRM cases pass again.

2017-10-03  Henry Linjamäki  <henry.linjamaki@parmance.com>

	* brigfrontend/brig-branch-inst-handler.cc: Fix (more) crash with
	calls with more than 4 args.  It missed a reference which is required
	because vector expansion can move the object to another location.

2017-09-29  Henry Linjamäki  <henry.linjamaki@parmance.com>

	* brigfrontend/brig-branch-inst-handler.cc: Fix crash with
	calls with more than 4 args. Also fix a misexecution issue
	with kernels that have both unexpanded ID functions and
	calls to subfunctions.

2017-09-28  Henry Linjamäki  <henry.linjamaki@parmance.com>

	* brig-lang.c: Added function attributes and their handlers.
	Make BRIGFE 3-level optimize by default.

2017-09-27  Pekka Jääskeläinen  <pekka.jaaskelainen@parmance.com>

	* brig-lang.c: Improved support for function and module scope
	group segment variables.  PRM specs defines function and module
	scope group segment variables as an experimental feature. However,
	PRM test suite uses and hcc relies on them. In addition, hcc
	assumes certain group variable layout in its dynamic group segment
	allocation code.  We cannot have global group memory offsets if we
	want to both have kernel-specific group segment size and multiple
	kernels calling the same functions that use function scope group memory
	variables.  Now group segment is handled by separate book keeping of
	module scope and function (kernel) offsets. Each function has a "frame"
	in the group segment offset to which is given as an argument.
	* brigfrontend/brig-branch-inst-handler.cc: See above.
	* brigfrontend/brig-code-entry-handler.cc: See above.
	* brigfrontend/brig-fbarrier-handler.cc: See above.
	* brigfrontend/brig-function-handler.cc: See above.
	* brigfrontend/brig-function.cc: See above.
	* brigfrontend/brig-function.h: See above.
	* brigfrontend/brig-to-generic.cc: See above.
	* brigfrontend/brig-to-generic.h: See above.
	* brigfrontend/brig-util.cc: See above.
	* brigfrontend/brig-util.h: See above.
	* brigfrontend/brig-variable-handler.cc: See above.

2017-09-25  Pekka Jääskeläinen  <pekka.jaaskelainen@parmance.com>

	* brigfrontend/brig-to-generic.cc: Ensure per WI copies of
	private variables are aligned too.

2017-09-17  Thomas Schwinge  <thomas@codesourcery.com>

	* Make-lang.in (GO_TEXI_FILES): Rename to...
	(BRIG_TEXI_FILES): ... this.
	(doc/gccbrig.info, doc/gccbrig.dvi, doc/gccbrig.pdf, brig.info)
	(brig.srcinfo, brig.man, brig.srcman, brig.install-man)
	($(DESTDIR)$(man1dir)/$(GCCBRIG_INSTALL_NAME)$(man1ext)):
	Uncomment/enable targets.
	(gccbrig.pod): New target.
	* gccbrig.texi: New file.

2017-08-04  Henry Linjamäki  <henry.linjamaki@parmance.com>

	Fix PR 81713
	* brigfrontend/brig-basic-inst-handler.cc: replace build_int_cst with
	bitsize_int in building BIT_FIELD_REF.
	* brigfrontend/brig-code-entry-handler.cc: likewise.

2017-07-05  Richard Sandiford  <richard.sandiford@linaro.org>
	    Alan Hayward  <alan.hayward@arm.com>
	    David Sherwood  <david.sherwood@arm.com>

	* brig-c.h (brig_type_for_mode): Remove "enum" before "machine_mode".
	* brig-lang.c (brig_langhook_type_for_mode): Likewise.

2017-07-04  Jakub Jelinek  <jakub@redhat.com>

	* brigfrontend/brig-function.cc: Include profile-count.h.
	* brigfrontend/brig-to-generic.cc: Likewise.

2017-05-18  Thomas Schwinge  <thomas@codesourcery.com>

	* brigfrontend/brig-to-generic.h (class brig_to_generic): Use
	"dump_flags_t" for "m_dump_flags" member.

2017-05-13  Pekka Jääskeläinen  <pekka.jaaskelainen@parmance.com>

	* brigfrontend/brig-code-entry-handler.cc
	(brig_code_entry_handler::build_address_operand): Fix
	an assertion when doing an 'lda' of a private array
	offset.

2017-05-03  Pekka Jääskeläinen  <pekka.jaaskelainen@parmance.com>

	* brigfrontend/brig-code-entry-handler.cc
	(brig_code_entry_handler::build_address_operand): Fix a bug
	with reg+offset addressing on 32b segments. In large mode,
	the offset is treated as 32bits unless it's global, readonly or
	kernarg address space.

2016-02-01  Pekka Jääskeläinen  <pekka.jaaskelainen@parmance.com>

	* brigfrontend/brig-code-entry-handler.cc: fix address
	expressions which refer only to offset 0, but nothing else.
	* brigfrontend/brig-lane-inst-handler.cc: fix
	activelanepermute_b64 HSAIL instruction.
	* brigfrontend/brig-to-generic.cc: remove useless c_str()
	call. Add missing va_end (). Fix PR79250.

2017-01-30  Jakub Jelinek  <jakub@redhat.com>

	* brigfrontend/brig-code-entry-handler.cc
	(brig_code_entry_handler::get_tree_cst_for_hsa_operand): For %lu
	cast size_t arguments to unsigned long.

2017-01-27  Pekka Jääskeläinen  <pekka.jaaskelainen@parmance.com>

	* config-lang.in: Removed stale target-libbrig reference.

2017-01-26  Jakub Jelinek  <jakub@redhat.com>

	Update copyright years.

2017-01-24  Pekka Jääskeläinen  <pekka@parmance.com>
	    Martin Jambor  <mjambor@suse.cz>

	* Make-lang.in: New file.
	* brig-builtins.h: Likewise.
	* brig-c.h: Likewise.
	* brig-lang.c: Likewise.
	* brigspec.c: Likewise.
	* config-lang.in: Likewise.
	* lang-specs.h: Likewise.
	* lang.opt: Likewise.
	* brigfrontend/brig-arg-block-handler.cc: Likewise.
	* brigfrontend/brig-atomic-inst-handler.cc: Likewise.
	* brigfrontend/brig-basic-inst-handler.cc: Likewise.
	* brigfrontend/brig-branch-inst-handler.cc: Likewise.
	* brigfrontend/brig-cmp-inst-handler.cc: Likewise.
	* brigfrontend/brig-code-entry-handler.cc: Likewise.
	* brigfrontend/brig-code-entry-handler.h: Likewise.
	* brigfrontend/brig-comment-handler.cc: Likewise.
	* brigfrontend/brig-control-handler.cc: Likewise.
	* brigfrontend/brig-copy-move-inst-handler.cc: Likewise.
	* brigfrontend/brig-cvt-inst-handler.cc: Likewise.
	* brigfrontend/brig-fbarrier-handler.cc: Likewise.
	* brigfrontend/brig-function-handler.cc: Likewise.
	* brigfrontend/brig-function.cc: Likewise.
	* brigfrontend/brig-function.h: Likewise.
	* brigfrontend/brig-inst-mod-handler.cc: Likewise.
	* brigfrontend/brig-label-handler.cc: Likewise.
	* brigfrontend/brig-lane-inst-handler.cc: Likewise.
	* brigfrontend/brig-machine.c: Likewise.
	* brigfrontend/brig-machine.h: Likewise.
	* brigfrontend/brig-mem-inst-handler.cc: Likewise.
	* brigfrontend/brig-module-handler.cc: Likewise.
	* brigfrontend/brig-queue-inst-handler.cc: Likewise.
	* brigfrontend/brig-seg-inst-handler.cc: Likewise.
	* brigfrontend/brig-signal-inst-handler.cc: Likewise.
	* brigfrontend/brig-to-generic.cc: Likewise.
	* brigfrontend/brig-to-generic.h: Likewise.
	* brigfrontend/brig-util.cc: Likewise.
	* brigfrontend/brig-util.h: Likewise.
	* brigfrontend/brig-variable-handler.cc: Likewise.
	* brigfrontend/phsa.h: Likewise.
