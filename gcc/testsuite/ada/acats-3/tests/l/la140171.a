-- LA140171.A
--
--                             Grant of Unlimited Rights
--
--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,
--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained 
--     unlimited rights in the software and documentation contained herein.
--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making 
--     this public release, the Government intends to confer upon all 
--     recipients unlimited rights  equal to those held by the Government.  
--     These rights include rights to use, duplicate, release or disclose the 
--     released technical data and computer software in whole or in part, in 
--     any manner and for any purpose whatsoever, and to have or permit others 
--     to do so.
--
--                                    DISCLAIMER
--
--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR
--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED 
--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE
--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE 
--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A
--     PARTICULAR PURPOSE OF SAID MATERIAL.
--*
--
-- OBJECTIVE:
--      See LA140172.AM.
--
-- TEST DESCRIPTION:
--      See LA140172.AM.
--
-- SPECIAL REQUIREMENTS:
--      See LA140172.AM.
--
-- TEST FILES:
--      This test consists of the following files:
--         LA140170.A
--      -> LA140171.A
--         LA140172.AM
--         LA140173.A
--
-- PASS/FAIL CRITERIA:                
--      See LA140172.AM.
--
-- CHANGE HISTORY:
--     07 DEC 96   SAIC        ACVC 2.1: Initial version.
--
--!

function LA14017_1 (P1, P2 : swap_type_ptr;
                    count : count_type) return count_type is
     temp : integer := 0;
     count_factor : count_type := 10;

     function Inc (Param : integer) return integer;

     function Inc (Param : integer) return integer is separate;     

     procedure Swap_Ptrs (P1, P2 : in out swap_type_ptr) is
          temp : integer := 0;
     begin
          temp := P1.p_all;
          P1.p_all := P2.p_all;
          P2.p_all := temp;
     end Swap_Ptrs;

begin
     return count_type (Inc (integer(count)));
end LA14017_1;
