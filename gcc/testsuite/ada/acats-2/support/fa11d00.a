-- FA11D00.A
--
--                             Grant of Unlimited Rights
--
--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,
--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained 
--     unlimited rights in the software and documentation contained herein.
--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making 
--     this public release, the Government intends to confer upon all 
--     recipients unlimited rights  equal to those held by the Government.  
--     These rights include rights to use, duplicate, release or disclose the 
--     released technical data and computer software in whole or in part, in 
--     any manner and for any purpose whatsoever, and to have or permit others 
--     to do so.
--
--                                    DISCLAIMER
--
--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR
--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED 
--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE
--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE 
--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A
--     PARTICULAR PURPOSE OF SAID MATERIAL.
--*
--
-- FOUNDATION DESCRIPTION:
--      This foundation declares parent types and operations that can
--      be inherited by its children.  
--
-- CHANGE HISTORY:
--      06 Dec 94   SAIC    ACVC 2.0
--      21 Dec 94   SAIC    Modified type Int_Type
--
--!

package FA11D00 is  -- Complex_Definition_Pkg

   -- Simulate a complex number support package. Complex numbers
   -- are treated as coordinates in the Cartesian plane.

   type Int_Type is range -200 .. 100;

   type Complex_Type is record
      Real : Int_Type;
      Imag : Int_Type;
   end record;

   Zero        : constant Complex_Type := (Real => 0, Imag => 0);
   One         : constant Complex_Type := (Real => 1, Imag => 0);
   Check_Value : constant Complex_Type := (Real => 17, Imag => 23);

   Add_Error       : exception;              
   Subtract_Error  : exception;              
   Divide_Error    : exception;              
   Multiply_Error  : exception;              

   TC_Handled_In_Caller,                     
   TC_Handled_In_Child_Pkg_Proc,
   TC_Handled_In_Child_Pkg_Func,
   TC_Handled_In_Grandchild_Pkg_Proc,
   TC_Handled_In_Grandchild_Pkg_Func,
   TC_Handled_In_Child_Sub,
   TC_Propagated_To_Caller : boolean := False;

   function Complex (Real, Imag : Int_Type)
     return Complex_Type;                             

end FA11D00;     -- Complex_Definition_Pkg

--=======================================================================--

package body FA11D00 is  -- Complex_Definition_Pkg
   function Complex (Real, Imag : Int_Type) return Complex_Type is
   begin
      return (Real, Imag);
   end Complex;

end FA11D00;     -- Complex_Definition_Pkg
